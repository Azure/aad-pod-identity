<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Azure Active Directory Pod Identity for Kubernetes â€“ Documentation</title><link>https://azure.github.io/aad-pod-identity/docs/</link><description>Recent content in Documentation on Azure Active Directory Pod Identity for Kubernetes</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://azure.github.io/aad-pod-identity/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: AzureIdentity</title><link>https://azure.github.io/aad-pod-identity/docs/concepts/azureidentity/</link><pubDate>Tue, 03 Nov 2020 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/concepts/azureidentity/</guid><description>
&lt;details>
&lt;summary>Examples&lt;/summary>
&lt;ul>
&lt;li>user-assigned identity&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;aadpodidentity.k8s.io/v1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">AzureIdentity&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;AzureIdentityName&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resourceID&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;ResourceID&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">clientID&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;ClientID&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>service principal (single-tenant)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Secret&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;SecretName&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Opaque&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">data&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">clientSecret&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;ClientSecret&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;aadpodidentity.k8s.io/v1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">AzureIdentity&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;AzureIdentityName&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">tenantID&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;TenantID&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">clientID&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;ClientID&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">clientPassword&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{&lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;SecretName&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;namespace&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;SecretNamespace&amp;gt;&amp;#34;&lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>service principal (multi-tenant)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Secret&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;SecretName&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Opaque&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">data&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">clientSecret&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;ClientSecret&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;aadpodidentity.k8s.io/v1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">AzureIdentity&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;AzureIdentityName&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">tenantID&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;PrimaryTenantID&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">auxiliaryTenantIDs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">&amp;lt;AuxiliaryTenantID1&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">&amp;lt;AuxiliaryTenantID2&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">clientID&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;ClientID&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">clientPassword&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{&lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;SecretName&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;namespace&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;SecretNamespace&amp;gt;&amp;#34;&lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>service principal (certificate)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Secret&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;SecretName&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Opaque&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">data&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">certificate&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;Certificate&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">password&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;Password&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;aadpodidentity.k8s.io/v1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">AzureIdentity&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;AzureIdentityName&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">tenantID&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;TenantID&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">clientID&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;ClientID&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">clientPassword&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{&lt;span style="color:#4e9a06">&amp;#34;Name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;SecretName&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Namespace&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;SecretNamespace&amp;gt;&amp;#34;&lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;h2 id="azureidentity">&lt;code>AzureIdentity&lt;/code>&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code>&lt;br>&lt;em>string&lt;/em>&lt;/td>
&lt;td>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code>&lt;br>&lt;em>string&lt;/em>&lt;/td>
&lt;td>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>metadata&lt;/code>&lt;br>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#objectmeta-v1-meta">&lt;em>&lt;code>ObjectMeta&lt;/code>&lt;/em>&lt;/a>&lt;/td>
&lt;td>Standard object&amp;rsquo;s metadata. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>spec&lt;/code>&lt;br>&lt;a href="#azureidentityspec">&lt;em>&lt;code>AzureIdentitySpec&lt;/code>&lt;/em>&lt;/a>&lt;/td>
&lt;td>Describes the specifications of an identity resource on Azure.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="azureidentityspec">&lt;code>AzureIdentitySpec&lt;/code>&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>type&lt;/code>&lt;br>&lt;em>integer&lt;/em>&lt;/td>
&lt;td>&lt;code>0&lt;/code>: user-assigned identity.&lt;br>&lt;code>1&lt;/code>: service principal. &lt;br>&lt;code>2&lt;/code>: service principal with certificate.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>resourceID&lt;/code>&lt;br>&lt;em>string&lt;/em>&lt;/td>
&lt;td>The resource ID of the user-assigned identity (only applicable when &lt;code>type&lt;/code> is &lt;code>0&lt;/code>), i.e. &lt;code>/subscriptions/&amp;lt;SubscriptionID&amp;gt;/resourcegroups/&amp;lt;ResourceGroup&amp;gt;/providers/Microsoft.ManagedIdentity/userAssignedIdentities/&amp;lt;UserAssignedIdentityName&amp;gt;&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientID&lt;/code>&lt;br>&lt;em>string&lt;/em>&lt;/td>
&lt;td>The client ID of the identity.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clientPassword&lt;/code>&lt;br>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#secretreference-v1-core">&lt;em>SecretReference&lt;/em>&lt;/a>&lt;/td>
&lt;td>The client secret of the identity, represented as a Kubernetes secret (only applicable when &lt;code>type&lt;/code> is &lt;code>1&lt;/code> or &lt;code>2&lt;/code>).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tenantID&lt;/code>&lt;br>&lt;em>string&lt;/em>&lt;/td>
&lt;td>The primary tenant ID of the identity (only applicable when &lt;code>type&lt;/code> is &lt;code>1&lt;/code> or &lt;code>2&lt;/code>).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>auxiliaryTenantIDs&lt;/code>&lt;br>&lt;em>[]string&lt;/em>&lt;/td>
&lt;td>The auxiliary tenant IDs of the identity (only applicable when &lt;code>type&lt;/code> is &lt;code>1&lt;/code>).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>adEndpoint&lt;/code>&lt;br>&lt;em>string&lt;/em>&lt;/td>
&lt;td>The Azure Active Directory endpoint.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: Match Pods in the Namespace</title><link>https://azure.github.io/aad-pod-identity/docs/configure/match_pods_in_namespace/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/configure/match_pods_in_namespace/</guid><description>
&lt;blockquote>
&lt;p>Available from &lt;a href="https://github.com/Azure/aad-pod-identity/releases/tag/1.3.0-mic-1.4.0-nmi">1.3.0-mic-1.4.0-nmi release&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>By default, AAD Pod Identity matches pods to identities across namespaces. To match only pods in the namespace containing &lt;code>AzureIdentity&lt;/code>, use one of these techniques:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Attach a &lt;code>aadpodidentity.k8s.io/Behavior: namespaced&lt;/code> annotation to each &lt;code>AzureIdentity&lt;/code> resource.&lt;/p>
&lt;p>Here is the &lt;code>AzureIdentity&lt;/code> manifest from the previous step with this annotation added:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;aadpodidentity.k8s.io/v1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">AzureIdentity&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;a-idname&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">annotations&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">aadpodidentity.k8s.io/Behavior&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">namespaced&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resourceID&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/subscriptions/&amp;lt;subid&amp;gt;/resourcegroups/&amp;lt;resourcegroup&amp;gt;/providers/Microsoft.ManagedIdentity/userAssignedIdentities/&amp;lt;name&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">clientID&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;clientId&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Add the &lt;code>--forceNamespaced&lt;/code> command line argument or set the &lt;code>FORCENAMESPACED=true&lt;/code> environment variable when starting both the MIC and NMI components.&lt;/p>
&lt;p>Here is a section from the MIC deployment which adds &lt;em>both&lt;/em> the command line argument and the environment variable for illustration. Pick one approach and use it to update both the MIC deployment and the NMI daemon set.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">containers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">mic&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;mcr.microsoft.com/k8s/aad-pod-identity/mic:1.3&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">args&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;--cloudconfig=/etc/kubernetes/azure.json&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;--logtostderr&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;--forceNamespaced&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">env&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">FORCENAMESPACED&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">value&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;true&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Role Assignment</title><link>https://azure.github.io/aad-pod-identity/docs/getting-started/role-assignment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/getting-started/role-assignment/</guid><description>
&lt;p>Your cluster will need the correct role assignment configuration to perform Azure-related operations such as assigning and un-assigning the identity on the underlying VM/VMSS. You can run the following commands to help you set up the appropriate role assignments for your cluster identity before deploying aad-pod-identity.&lt;/p>
&lt;blockquote>
&lt;p>NOTE: If you&amp;rsquo;re running aad-pod-identity in &lt;a href="../../configure/pod_identity_in_managed_mode">managed mode&lt;/a> you don&amp;rsquo;t need these role assignments. If you&amp;rsquo;re using the AKS pod-managed identities add-on, refer to the &lt;a href="https://docs.microsoft.com/en-us/azure/aks/use-azure-ad-pod-identity">AKS add-on documentation&lt;/a> for the required role assignments.&lt;/p>
&lt;/blockquote>
&lt;p>AKS and aks-engine clusters require an identity to communicate with Azure. This identity can be either a &lt;strong>managed identity&lt;/strong> (in the form of system-assigned identity or user-assigned identity) or a &lt;strong>service principal&lt;/strong>. This section explains various role assignments that need to be performed before using AAD Pod Identity. Without the proper role assignments, your Azure cluster will not have the correct permission to assign and un-assign identities from the underlying virtual machines (VM) or virtual machine scale sets (VMSS).&lt;/p>
&lt;p>In the case of self-managed clusters (manual installation of Kubernetes on Azure VMs), you&amp;rsquo;ll need to assign a &lt;strong>user-assigned managed identity&lt;/strong> to the VM or VMSS or use a &lt;strong>service principal&lt;/strong>. This is required for MIC to perform Azure-related operations for assigning/un-assigning the identity required for applications.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">SUBSCRIPTION_ID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;SubscriptionID&amp;gt;&amp;#34;&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">RESOURCE_GROUP&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;AKSResourceGroup&amp;gt;&amp;#34;&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">CLUSTER_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;AKSClusterName&amp;gt;&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Optional: if you are planning to deploy your user-assigned identities&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># in a separate resource group instead of your node resource group&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">IDENTITY_RESOURCE_GROUP&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;IdentityResourceGroup&amp;gt;&amp;#34;&lt;/span>
curl -s https://raw.githubusercontent.com/Azure/aad-pod-identity/master/hack/role-assignment.sh &lt;span style="color:#000;font-weight:bold">|&lt;/span> bash
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Note: &lt;code>&amp;lt;AKSResourceGroup&amp;gt;&lt;/code> is where your AKS cluster is deployed to.&lt;/p>
&lt;/blockquote>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Currently, &lt;a href="../../concepts/mic">MIC&lt;/a> uses one of the following two ways to authenticate with Azure:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/aks/use-managed-identity">Managed Identity&lt;/a> (system-assigned identity or user-assigned identity)&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal">Service Principal&lt;/a> through &lt;code>/etc/kubernetes/azure.json&lt;/code>, which is available in every node, or credentials defined by environment variables;&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Clusters with managed identity are only compatible with AAD Pod Identity 1.5+.&lt;/p>
&lt;/blockquote>
&lt;h2 id="more-on-authentication-methods">More on authentication methods&lt;/h2>
&lt;p>&lt;a href="https://kubernetes-sigs.github.io/cloud-provider-azure/install/configs/">&lt;code>/etc/kubernetes/azure.json&lt;/code>&lt;/a> is a well-known JSON file in each node that provides the details about which method MIC uses for authentication:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Authentication method&lt;/th>
&lt;th>&lt;code>/etc/kubernetes/azure.json&lt;/code> fields used&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>System-assigned managed identity&lt;/td>
&lt;td>&lt;code>useManagedIdentityExtension: true&lt;/code> and &lt;code>userAssignedIdentityID:&amp;quot;&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>User-assigned managed identity&lt;/td>
&lt;td>&lt;code>useManagedIdentityExtension: true&lt;/code> and &lt;code>userAssignedIdentityID:&amp;quot;&amp;lt;UserAssignedIdentityID&amp;gt;&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Service principal (default)&lt;/td>
&lt;td>&lt;code>aadClientID: &amp;quot;&amp;lt;AADClientID&amp;gt;&amp;quot;&lt;/code> and &lt;code>aadClientSecret: &amp;quot;&amp;lt;AADClientSecret&amp;gt;&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="obtaining-the-id-of-the-managed-identity--service-principal">Obtaining the ID of the managed identity / service principal&lt;/h2>
&lt;p>After your cluster is provisioned, depending on your cluster identity configuration, run one of the following commands to retrieve the &lt;strong>ID&lt;/strong> of your managed identity or service principal, which will be used for role assignment in the next section:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Cluster configuration&lt;/th>
&lt;th>Command&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>AKS cluster with service principal&lt;/td>
&lt;td>&lt;code>az aks show -g &amp;lt;AKSResourceGroup&amp;gt; -n &amp;lt;AKSClusterName&amp;gt; --query servicePrincipalProfile.clientId -o tsv&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AKS cluster with managed identity&lt;/td>
&lt;td>&lt;code>az aks show -g &amp;lt;AKSResourceGroup&amp;gt; -n &amp;lt;AKSClusterName&amp;gt; --query identityProfile.kubeletidentity.clientId -o tsv&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>aks-engine cluster with service principal&lt;/td>
&lt;td>Use the client ID of the service principal defined in the API model&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>aks-engine cluster with system-assigned identity&lt;/td>
&lt;td>&lt;code>az &amp;lt;vm|vmss&amp;gt; identity show -g &amp;lt;NodeResourceGroup&amp;gt; -n &amp;lt;VM|VMSS Name&amp;gt; --query principalId -o tsv&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>aks-engine cluster with user-assigned identity&lt;/td>
&lt;td>&lt;code>az &amp;lt;vm|vmss&amp;gt; identity show -g &amp;lt;NodeResourceGroup&amp;gt; -n &amp;lt;VM|VMSS Name&amp;gt; --query userAssignedIdentities -o tsv&lt;/code>, then copy the &lt;code>clientID&lt;/code> of the selected user-assigned identity&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="performing-role-assignments">Performing role assignments&lt;/h2>
&lt;p>The roles &lt;a href="https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles#managed-identity-operator">&lt;strong>Managed Identity Operator&lt;/strong>&lt;/a> and &lt;a href="https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles#virtual-machine-contributor">&lt;strong>Virtual Machine Contributor&lt;/strong>&lt;/a> must be assigned to the cluster managed identity or service principal, identified by the &lt;strong>ID&lt;/strong> obtained above, before deploying AAD Pod Identity so that it can assign and un-assign identities from the underlying VM/VMSS.&lt;/p>
&lt;blockquote>
&lt;p>For AKS cluster, the node resource group refers to the resource group with a &lt;code>MC_&lt;/code> prefix, which contains all of the infrastructure resources associated with the cluster like VM/VMSS.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">az role assignment create --role &lt;span style="color:#4e9a06">&amp;#34;Managed Identity Operator&amp;#34;&lt;/span> --assignee &amp;lt;ID&amp;gt; --scope /subscriptions/&amp;lt;SubscriptionID&amp;gt;/resourcegroups/&amp;lt;NodeResourceGroup&amp;gt;
az role assignment create --role &lt;span style="color:#4e9a06">&amp;#34;Virtual Machine Contributor&amp;#34;&lt;/span> --assignee &amp;lt;ID&amp;gt; --scope /subscriptions/&amp;lt;SubscriptionID&amp;gt;/resourcegroups/&amp;lt;NodeResourceGroup&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>RBAC and non-RBAC clusters require the same role assignments.&lt;/p>
&lt;/blockquote>
&lt;h2 id="user-assigned-identities-that-are-not-within-the-node-resource-group">User-assigned identities that are not within the node resource group&lt;/h2>
&lt;p>There are additional role assignments required if you wish to assign user-assigned identities that are not within the node resource group. You can run the following command to assign the &lt;strong>Managed Identity Operator&lt;/strong> role with the identity resource group scope:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">az role assignment create --role &lt;span style="color:#4e9a06">&amp;#34;Managed Identity Operator&amp;#34;&lt;/span> --assignee &amp;lt;ID&amp;gt; --scope /subscriptions/&amp;lt;SubscriptionID&amp;gt;/resourcegroups/&amp;lt;IdentityResourceGroup&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To enable fine-grained control on which user-assigned identity the cluster has access to, run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">az role assignment create --role &lt;span style="color:#4e9a06">&amp;#34;Managed Identity Operator&amp;#34;&lt;/span> --assignee &amp;lt;ID&amp;gt; --scope /subscriptions/&amp;lt;SubscriptionID&amp;gt;/resourcegroups/&amp;lt;IdentityResourceGroup&amp;gt;/providers/Microsoft.ManagedIdentity/userAssignedIdentities/&amp;lt;IdentityName&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="user-assigned-managed-identities-for-self-managed-clusters">User-assigned managed identities for self-managed clusters&lt;/h2>
&lt;p>If you deploy the VMs and install Kubernetes instead of using tools like &lt;a href="https://github.com/Azure/aks-engine">aks-engine&lt;/a> or &lt;a href="https://github.com/kubernetes-sigs/cluster-api-provider-azure">capz&lt;/a>, you&amp;rsquo;ll need to assign the user-assigned managed identity to the underlying VMs.&lt;/p>
&lt;h3 id="for-vmss">For VMSS&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">az vmss identity assign -n &amp;lt;VMSS name&amp;gt; -g &amp;lt;rg&amp;gt; --identities &amp;lt;IdentityResourceID&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="for-vms">For VMs&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">az vm identity assign -n &amp;lt;VM name&amp;gt; -g &amp;lt;rg&amp;gt; --identities &amp;lt;IdentityResourceID&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Repeat for all your worker node VMs.&lt;/p>
&lt;h2 id="reducing-number-of-role-assignments">Reducing number of role assignments&lt;/h2>
&lt;p>Currently there&amp;rsquo;s a limit of &lt;a href="https://docs.microsoft.com/en-us/azure/role-based-access-control/troubleshooting#azure-role-assignments-limit">2000 role assignments&lt;/a> allowed within an Azure subscription. Once you&amp;rsquo;ve hit this limit, you will not be able to assign new roles.&lt;/p>
&lt;p>To reduce the number of role assignments, one thing you could do is instead of assigning the &lt;code>Managed Identity Operator&lt;/code> role to managed identities individually, you could assign the &lt;code>Managed Identity Operator&lt;/code> role to the resource group the managed identities belong to. Resources will inherit roles from the resource group, meaning you can create as many managed identities as you need and not affect the subscription&amp;rsquo;s overall role assignment count.&lt;/p>
&lt;h2 id="useful-links">Useful links&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/aks/use-managed-identity">Use managed identities in AKS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal">Service principals with AKS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview">What are managed identities for Azure resources?&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Standard Walkthrough</title><link>https://azure.github.io/aad-pod-identity/docs/demo/standard_walkthrough/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/demo/standard_walkthrough/</guid><description>
&lt;p>Run the following commands to set Azure-related environment variables and login to Azure via &lt;code>az login&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">SUBSCRIPTION_ID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;SubscriptionID&amp;gt;&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># login as a user and set the appropriate subscription ID&lt;/span>
az login
az account &lt;span style="color:#204a87">set&lt;/span> -s &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">SUBSCRIPTION_ID&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">RESOURCE_GROUP&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;AKSResourceGroup&amp;gt;&amp;#34;&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">CLUSTER_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;AKSClusterName&amp;gt;&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># for this demo, we will be deploying a user-assigned identity to the AKS node resource group&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">IDENTITY_RESOURCE_GROUP&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>az aks show -g &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">RESOURCE_GROUP&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">CLUSTER_NAME&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> --query nodeResourceGroup -otsv&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">IDENTITY_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;demo&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>For AKS clusters, there are two resource groups that you need to be aware of - the resource group where you deploy your AKS cluster to (denoted by the environment variable &lt;code>RESOURCE_GROUP&lt;/code>), and the node resource group (&lt;code>MC_&amp;lt;AKSResourceGroup&amp;gt;_&amp;lt;AKSClusterName&amp;gt;_&amp;lt;AKSClusterLocation&amp;gt;&lt;/code>). The latter contains all of the infrastructure resources associated with the cluster like VM/VMSS and VNet. Depending on where you deploy your user-assigned identities, you might need additional role assignments. Please refer to &lt;a href="../../getting-started/role-assignment/">Role Assignment&lt;/a> for more information. For this demo, it is recommended to deploy the demo identity to your node resource group (the one with &lt;code>MC_&lt;/code> prefix).&lt;/p>
&lt;/blockquote>
&lt;h3 id="1-deploy-aad-pod-identity">1. Deploy aad-pod-identity&lt;/h3>
&lt;p>Deploy &lt;code>aad-pod-identity&lt;/code> components to an RBAC-enabled cluster:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/deploy/infra/deployment-rbac.yaml
&lt;span style="color:#8f5902;font-style:italic"># For AKS clusters, deploy the MIC and AKS add-on exception by running -&lt;/span>
kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/deploy/infra/mic-exception.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Deploy &lt;code>aad-pod-identity&lt;/code> components to a non-RBAC cluster:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/deploy/infra/deployment.yaml
&lt;span style="color:#8f5902;font-style:italic"># For AKS clusters, deploy the MIC and AKS add-on exception by running -&lt;/span>
kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/deploy/infra/mic-exception.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Deploy &lt;code>aad-pod-identity&lt;/code> using &lt;a href="https://v3.helm.sh/">Helm 3&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm repo add aad-pod-identity https://raw.githubusercontent.com/Azure/aad-pod-identity/master/charts
helm install aad-pod-identity aad-pod-identity/aad-pod-identity
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For a list of overwritable values when installing with Helm, please refer to &lt;a href="https://github.com/Azure/aad-pod-identity/tree/master/charts/aad-pod-identity#configuration">this section&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>Important: For AKS clusters with &lt;a href="https://docs.microsoft.com/en-us/azure/aks/limit-egress-traffic">limited egress traffic&lt;/a>, Please install aad-pod-identity in &lt;code>kube-system&lt;/code> namespace using the helm charts.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm install aad-pod-identity aad-pod-identity/aad-pod-identity --namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>kube-system
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-create-an-identity-on-azure">2. Create an identity on Azure&lt;/h3>
&lt;p>Create an identity on Azure and store the client ID and resource ID of the identity as environment variables:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">az identity create -g &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_RESOURCE_GROUP&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_NAME&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">IDENTITY_CLIENT_ID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>az identity show -g &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_RESOURCE_GROUP&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_NAME&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> --query clientId -otsv&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">IDENTITY_RESOURCE_ID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>az identity show -g &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_RESOURCE_GROUP&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_NAME&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> --query id -otsv&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-deploy-azureidentity">3. Deploy &lt;code>AzureIdentity&lt;/code>&lt;/h3>
&lt;p>Create an &lt;code>AzureIdentity&lt;/code> in your cluster that references the identity you created above:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;span style="color:#4e9a06">apiVersion: &amp;#34;aadpodidentity.k8s.io/v1&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06">kind: AzureIdentity
&lt;/span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;span style="color:#4e9a06"> name: ${IDENTITY_NAME}
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> type: 0
&lt;/span>&lt;span style="color:#4e9a06"> resourceID: ${IDENTITY_RESOURCE_ID}
&lt;/span>&lt;span style="color:#4e9a06"> clientID: ${IDENTITY_CLIENT_ID}
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Set &lt;code>type: 0&lt;/code> for user-assigned MSI, &lt;code>type: 1&lt;/code> for Service Principal with client secret, or &lt;code>type: 2&lt;/code> for Service Principal with certificate. For more information, see &lt;a href="https://github.com/Azure/aad-pod-identity/tree/master/deploy/demo">here&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h3 id="4-optional-match-pods-in-the-namespace">4. (Optional) Match pods in the namespace&lt;/h3>
&lt;p>For matching pods in the namespace, please refer to the &lt;a href="../../configure/match_pods_in_namespace/">namespaced documentation&lt;/a>.&lt;/p>
&lt;h3 id="5-deploy-azureidentitybinding">5. Deploy &lt;code>AzureIdentityBinding&lt;/code>&lt;/h3>
&lt;p>Create an &lt;code>AzureIdentityBinding&lt;/code> that reference the &lt;code>AzureIdentity&lt;/code> you created above:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;span style="color:#4e9a06">apiVersion: &amp;#34;aadpodidentity.k8s.io/v1&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06">kind: AzureIdentityBinding
&lt;/span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;span style="color:#4e9a06"> name: ${IDENTITY_NAME}-binding
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> azureIdentity: ${IDENTITY_NAME}
&lt;/span>&lt;span style="color:#4e9a06"> selector: ${IDENTITY_NAME}
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="6-deployment-and-validation">6. Deployment and Validation&lt;/h3>
&lt;p>For a pod to match an identity binding, it needs a label with the key &lt;code>aadpodidbinding&lt;/code> whose value is that of the &lt;code>selector:&lt;/code> field in the &lt;code>AzureIdentityBinding&lt;/code>. Deploy a pod that validates the functionality:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt; EOF | kubectl apply -f -
&lt;/span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;span style="color:#4e9a06">kind: Pod
&lt;/span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;span style="color:#4e9a06"> name: demo
&lt;/span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;span style="color:#4e9a06"> aadpodidbinding: $IDENTITY_NAME
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> containers:
&lt;/span>&lt;span style="color:#4e9a06"> - name: demo
&lt;/span>&lt;span style="color:#4e9a06"> image: mcr.microsoft.com/oss/azure/aad-pod-identity/demo:v1.8.17
&lt;/span>&lt;span style="color:#4e9a06"> args:
&lt;/span>&lt;span style="color:#4e9a06"> - --subscription-id=${SUBSCRIPTION_ID}
&lt;/span>&lt;span style="color:#4e9a06"> - --resource-group=${IDENTITY_RESOURCE_GROUP}
&lt;/span>&lt;span style="color:#4e9a06"> - --identity-client-id=${IDENTITY_CLIENT_ID}
&lt;/span>&lt;span style="color:#4e9a06"> nodeSelector:
&lt;/span>&lt;span style="color:#4e9a06"> kubernetes.io/os: linux
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;code>mcr.microsoft.com/oss/azure/aad-pod-identity/demo&lt;/code> is an image that demonstrates the use of AAD pod identity. The source code can be found &lt;a href="https://github.com/Azure/aad-pod-identity/blob/master/cmd/demo/main.go">here&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;p>To verify that the pod is indeed using the identity correctly:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl logs demo
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If successful, the log output would be similar to the following output:&lt;/p>
&lt;pre>&lt;code class="language-log" data-lang="log">I0510 18:16:53.042124 1 main.go:128] curl -H Metadata:true &amp;quot;http://169.254.169.254/metadata/instance?api-version=2017-08-01&amp;quot;: {&amp;quot;compute&amp;quot;:{&amp;quot;location&amp;quot;:&amp;quot;westus2&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;aks-nodepool1-17529566-vmss_1&amp;quot;,&amp;quot;offer&amp;quot;:&amp;quot;aks&amp;quot;,&amp;quot;osType&amp;quot;:&amp;quot;Linux&amp;quot;,&amp;quot;placementGroupId&amp;quot;:&amp;quot;877d5750-2bed-43dd-bad6-62e4f3b58a3c&amp;quot;,&amp;quot;platformFaultDomain&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;platformUpdateDomain&amp;quot;:&amp;quot;1&amp;quot;,&amp;quot;publisher&amp;quot;:&amp;quot;microsoft-aks&amp;quot;,&amp;quot;resourceGroupName&amp;quot;:&amp;quot;MC_chuwon_chuwon_westus2&amp;quot;,&amp;quot;sku&amp;quot;:&amp;quot;aks-ubuntu-1804-gen2-2021-q1&amp;quot;,&amp;quot;subscriptionId&amp;quot;:&amp;quot;2d31b5ab-0ddc-4991-bf8d-61b6ad196f5a&amp;quot;,&amp;quot;tags&amp;quot;:&amp;quot;aksEngineVersion:v0.47.0-aks-gomod-b4-aks;creationSource:aks-aks-nodepool1-17529566-vmss;orchestrator:Kubernetes:1.18.14;poolName:nodepool1;resourceNameSuffix:17529566&amp;quot;,&amp;quot;version&amp;quot;:&amp;quot;2021.01.28&amp;quot;,&amp;quot;vmId&amp;quot;:&amp;quot;4fc9f60c-170c-4e76-84ff-81c6c0cecea1&amp;quot;,&amp;quot;vmSize&amp;quot;:&amp;quot;Standard_DS2_v2&amp;quot;},&amp;quot;network&amp;quot;:{&amp;quot;interface&amp;quot;:[{&amp;quot;ipv4&amp;quot;:{&amp;quot;ipAddress&amp;quot;:[{&amp;quot;privateIpAddress&amp;quot;:&amp;quot;10.240.0.5&amp;quot;,&amp;quot;publicIpAddress&amp;quot;:&amp;quot;&amp;quot;}],&amp;quot;subnet&amp;quot;:[{&amp;quot;address&amp;quot;:&amp;quot;10.240.0.0&amp;quot;,&amp;quot;prefix&amp;quot;:&amp;quot;16&amp;quot;}]},&amp;quot;ipv6&amp;quot;:{&amp;quot;ipAddress&amp;quot;:[]},&amp;quot;macAddress&amp;quot;:&amp;quot;000D3AFE98BF&amp;quot;}]}}
I0510 18:17:04.474588 1 main.go:100] successfully acquired a service principal token from http://169.254.169.254/metadata/identity/oauth2/token using a user-assigned identity (a9979fb6-6655-4612-95c9-7e4d0c83001b)
I0510 18:17:04.474610 1 main.go:50] Try decoding your token &amp;lt;JWT token&amp;gt; at https://jwt.io
&lt;/code>&lt;/pre>&lt;p>Once you are done with the demo, clean up your resources:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl delete pod demo
kubectl delete azureidentity &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_NAME&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
kubectl delete azureidentitybinding &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_NAME&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>-binding
az role assignment delete --id &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_ASSIGNMENT_ID&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
az identity delete -g &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_RESOURCE_GROUP&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_NAME&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="uninstall-notes">Uninstall Notes&lt;/h2>
&lt;p>The NMI pods modify the nodes' [iptables] to intercept calls to IMDS endpoint within a node. This allows NMI to insert identities assigned to a pod before executing the request on behalf of the caller.&lt;/p>
&lt;p>These iptables entries will be cleaned up when the pod-identity pods are uninstalled. However, if the pods are terminated for unexpected reasons, the iptables entries can be removed with these commands on the node:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># remove the custom chain reference&lt;/span>
iptables -t nat -D PREROUTING -j aad-metadata
&lt;span style="color:#8f5902;font-style:italic"># flush the custom chain&lt;/span>
iptables -t nat -F aad-metadata
&lt;span style="color:#8f5902;font-style:italic"># remove the custom chain&lt;/span>
iptables -t nat -X aad-metadata
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: AzureIdentityBinding</title><link>https://azure.github.io/aad-pod-identity/docs/concepts/azureidentitybinding/</link><pubDate>Tue, 03 Nov 2020 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/concepts/azureidentitybinding/</guid><description>
&lt;details>
&lt;summary>Examples&lt;/summary>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;aadpodidentity.k8s.io/v1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">AzureIdentityBinding&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">&amp;lt;AzureIdentityBindingName&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">azureIdentity&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;AzureIdentityName&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">selector&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;Selector&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;h2 id="azureidentitybinding">&lt;code>AzureIdentityBinding&lt;/code>&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code>&lt;br>&lt;em>string&lt;/em>&lt;/td>
&lt;td>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code>&lt;br>&lt;em>string&lt;/em>&lt;/td>
&lt;td>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>metadata&lt;/code>&lt;br>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#objectmeta-v1-meta">&lt;em>&lt;code>ObjectMeta&lt;/code>&lt;/em>&lt;/a>&lt;/td>
&lt;td>Standard object&amp;rsquo;s metadata. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>spec&lt;/code>&lt;br>&lt;a href="#azureidentitybindingspec">&lt;em>&lt;code>AzureIdentityBindingSpec&lt;/code>&lt;/em>&lt;/a>&lt;/td>
&lt;td>Describes the specifications of an identity binding relationship between an &lt;a href="../azureidentity">&lt;code>AzureIdentity&lt;/code>&lt;/a> and pod(s).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="azureidentitybindingspec">&lt;code>AzureIdentityBindingSpec&lt;/code>&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>azureIdentity&lt;/code>&lt;br>&lt;em>string&lt;/em>&lt;/td>
&lt;td>The name of the &lt;a href="../azureidentity">&lt;code>AzureIdentity&lt;/code>&lt;/a> that should be assigned to the pod(s) if matching selector is found.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>selector&lt;/code>&lt;br>&lt;em>string&lt;/em>&lt;/td>
&lt;td>The selector to identify which pods should be assigned to the &lt;code>AzureIdentity&lt;/code> above. It will go through a list of pods and look for value of pod label with key &lt;code>aadpodidbinding&lt;/code> that is equal to itself.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: AAD Pod Identity Tutorial</title><link>https://azure.github.io/aad-pod-identity/docs/demo/tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/demo/tutorial/</guid><description>
&lt;p>This tutorial is based on &lt;a href="https://github.com/xtellurian/aad-pods">this repository&lt;/a>.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://azure.microsoft.com/en-us/free/">Azure Account&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In this tutorial we are going to be using the Azure CLI, bash scripts, and kubectl. There are three sections, and each section contains several scripts to run. You&amp;rsquo;ll find all the scripts in the &lt;code>tutorial&lt;/code> directory.&lt;/p>
&lt;p>To begin, clone this repository&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">git clone https://github.com/Azure/aad-pod-identity
&lt;span style="color:#204a87">cd&lt;/span> aad-pod-identity/tutorial
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="using-azure-cli-kubectl-and-bash">Using Azure CLI, kubectl and bash&lt;/h3>
&lt;p>The following steps require the &lt;a href="https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latest">Azure CLI&lt;/a>, make sure to download and &lt;a href="https://docs.microsoft.com/en-us/cli/azure/authenticate-azure-cli?view=azure-cli-latest">login&lt;/a> before starting.&lt;/p>
&lt;p>If you&amp;rsquo;re on Windows, you should use &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10">Windows Subsystem for Linux&lt;/a> or another Bash terminal.&lt;/p>
&lt;p>You can install kubectl via the Azure CLI, or by &lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/">another method&lt;/a>&lt;/p>
&lt;p>&lt;code>az aks install-cli&lt;/code>&lt;/p>
&lt;h2 id="1-create-a-kubernetes-cluster-on-azure-aks">1. Create a Kubernetes Cluster on Azure (AKS)&lt;/h2>
&lt;h3 id="11-register-the-required-resource-types">1.1. Register the required resource types&lt;/h3>
&lt;p>&lt;code>./1-init-aks/1-azure-provider-registration.sh&lt;/code>&lt;/p>
&lt;p>AKS requires the following resources: Microsoft.Network, Microsoft.Storage, Microsoft.Compute, Microsoft.ContainerService. Register them on your subscription with the above script.&lt;/p>
&lt;h3 id="12-create-a-resource-group">1.2. Create a Resource Group&lt;/h3>
&lt;p>Set an environment variable in your shell, for the name of your resource group.&lt;/p>
&lt;p>&lt;code>export RG=&amp;quot;k8s-test&amp;quot;&lt;/code>&lt;/p>
&lt;p>This resource group is for your AKS cluster. Create it with this command.&lt;/p>
&lt;p>&lt;code>./1-init-aks/2-create-rg.sh&lt;/code>&lt;/p>
&lt;h3 id="13-create-azure-kubernetes-service">1.3. Create Azure Kubernetes Service&lt;/h3>
&lt;p>This will create an AKS instance in the resource group created above. It may take a couple of minutes to complete. Set the name of the this command in the shell.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#000">K8S_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Cluster-Name&amp;#34;&lt;/span>
./1-init-aks/3-create-aks.sh
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="14-configure-the-kubernetes-cli---kubectl">1.4. Configure the kubernetes CLI - &lt;code>kubectl&lt;/code>&lt;/h3>
&lt;p>With &lt;code>kubectl&lt;/code> installed, run the following script&lt;/p>
&lt;p>&lt;code>./1-init-aks/4-configure-cli.sh&lt;/code>&lt;/p>
&lt;p>Now the &lt;code>kubectl&lt;/code> command should control your AKS cluster. Try it out, it should look similar to below:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">$ kubectl get nodes
NAME STATUS ROLES AGE VERSION
aks-nodepool1-15831963-0 Ready agent 01h v1.9.6
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-configure-aks-with-required-infrastructure-on-the-cluster">2. Configure AKS with required infrastructure on the cluster&lt;/h2>
&lt;p>Pod Identity requires two components:&lt;/p>
&lt;ol>
&lt;li>Managed Identity Controller (MIC). A pod that binds Azure Ids to other pods - creates azureAssignedIdentity CRD.&lt;/li>
&lt;li>Node Managed Identity (NMI). Identifies the pod based on the remote address of the incoming request, and then queries the k8s (through MIC) for a matching Azure Id. It then make a adal request to get the token for the client id and returns as a response to the request. Implemented as a &lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/">DaemonSet&lt;/a>.&lt;/li>
&lt;/ol>
&lt;p>Deploy the infrastructure with the following command to deploy MIC, NMI, and MIC CRDs.&lt;/p>
&lt;p>&lt;code>./2-config-aks/2-deploy-infra.sh&lt;/code>&lt;/p>
&lt;p>NOTE: If you have RBAC enabled, use the following deployment instead:&lt;/p>
&lt;pre>&lt;code>kubectl create -f ../../deploy/infra/deployment-rbac.yaml
&lt;/code>&lt;/pre>&lt;h2 id="3-deploy-the-demo">3. Deploy the demo&lt;/h2>
&lt;p>The demo is basic, but does prove the concept.&lt;/p>
&lt;h3 id="31-create-an-azure-id">3.1. Create an Azure Id&lt;/h3>
&lt;p>We will be assigning the demo pod an &lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/managed-service-identity/overview">Azure Managed Service Identity&lt;/a>. The Azure Id will need to be in the same Resource Group &lt;em>as was created automatically by the provisioning of the AKS cluster&lt;/em> &lt;a href="https://github.com/Azure/aad-pod-identity/issues/38">see this issue for more information&lt;/a>.&lt;/p>
&lt;p>You might find the Resource Group name with&lt;/p>
&lt;p>&lt;code>az group list | grep $RG&lt;/code>&lt;/p>
&lt;p>Then set the environment variable&lt;/p>
&lt;p>&lt;code>export MC_RG=&amp;quot;resource-group-name&amp;quot;&lt;/code>&lt;/p>
&lt;p>Run the following to create an azure id&lt;/p>
&lt;p>&lt;code>./3-deploy-demo/1-create-azure-id.sh&lt;/code>&lt;/p>
&lt;h3 id="32-deploy-demo">3.2. Deploy demo&lt;/h3>
&lt;p>The &lt;code>/deploy/demo/deployment.yaml&lt;/code> describes the pod that will be deployed.&lt;/p>
&lt;p>It automatically adds the following values from your environment:&lt;/p>
&lt;ul>
&lt;li>subscriptionid: Id of your Azure Subscription&lt;/li>
&lt;li>clientid: From the Azure Id you created in the step above&lt;/li>
&lt;li>resourcegroup: From the Azure Id you created above&lt;/li>
&lt;/ul>
&lt;p>Run the following to deploy the demo&lt;/p>
&lt;p>&lt;code>./3-deploy-demo/2-deploy-demo.sh&lt;/code>&lt;/p>
&lt;h3 id="33-deploy-azure-id-to-kubernetes">3.3. Deploy Azure Id to Kubernetes&lt;/h3>
&lt;p>We need to tell the cluster about the Id we created, so it can bind it to the pod (the next step). To do that, we will deploy the spec found in &lt;code>/deploy/demo/aadpodidentity.yaml&lt;/code>.&lt;/p>
&lt;p>Run the following to deploy the Azure ID to Kubernetes:&lt;/p>
&lt;p>&lt;code>./3-deploy-demo/3-deploy-id-to-k8s.sh&lt;/code>&lt;/p>
&lt;h3 id="34-bind-the-id-to-our-demo-pod">3.4. Bind the Id to our demo pod&lt;/h3>
&lt;p>Last thing we need to do is bind the Id we created in step 1, and deployed in step 3, to the pod we deployed in step 2.&lt;/p>
&lt;p>Deploy the binding with the following&lt;/p>
&lt;p>&lt;code>./3-deploy-demo/4-deploy-id-binding.sh&lt;/code>&lt;/p>
&lt;h2 id="did-it-work">Did it work?&lt;/h2>
&lt;p>You&amp;rsquo;ll need to check the logs of each pod to know if everything worked.&lt;/p>
&lt;p>First, get the pod names with the following command:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">$ kubectl get pods
NAME READY STATUS RESTARTS AGE
demo-757967c54-64pzr 1/1 Running &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 1h &lt;span style="color:#8f5902;font-style:italic"># the demo pod&lt;/span>
mic-64ddcf5f65-h4hft 1/1 Running &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 19h &lt;span style="color:#8f5902;font-style:italic"># the MIC pod&lt;/span>
nmi-b9xbg 1/1 Running &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 1h &lt;span style="color:#8f5902;font-style:italic"># the NMI pod&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="check-the-managed-identity-controller-pod">Check the Managed Identity Controller pod&lt;/h3>
&lt;p>Check the logs of the MIC controller and see the binding successfully applied on the node.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">$ kubectl logs mic-64ddcf5f65-h4hft
....
I0606 23:19:45.867711 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> crd.go:123&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> Got id podid to assign
I0606 23:19:45.867829 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> crd.go:142&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> Creating assigned Id: demo-5788d95785-ghzwv-default-podid
I0606 23:19:45.874002 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> cloudprovider.go:170&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> Find aks-nodepool1-15831963-0 in resource group: MC_k8s-test_clusterFrank_eastus
I0606 23:20:11.051552 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> cloudprovider.go:162&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> Underlying cloud provider operation took 25.04421296s
I0606 23:20:11.051846 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> mic.go:259&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> Sync took: 25.220821436s
I0606 23:20:11.052905 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> event.go:218&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> Event&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>v1.ObjectReference&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>Kind:&lt;span style="color:#4e9a06">&amp;#34;AzureIdentityBinding&amp;#34;&lt;/span>, Namespace:&lt;span style="color:#4e9a06">&amp;#34;default&amp;#34;&lt;/span>, Name:&lt;span style="color:#4e9a06">&amp;#34;myIdBinding&amp;#34;&lt;/span>, UID:&lt;span style="color:#4e9a06">&amp;#34;19a07e0e-69e0-11e8-9e9f-4addade2df92&amp;#34;&lt;/span>, APIVersion:&lt;span style="color:#4e9a06">&amp;#34;aadpodidentity.k8s.io/v1&amp;#34;&lt;/span>, ResourceVersion:&lt;span style="color:#4e9a06">&amp;#34;89529&amp;#34;&lt;/span>, FieldPath:&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">})&lt;/span>: type: &lt;span style="color:#4e9a06">&amp;#39;Normal&amp;#39;&lt;/span> reason: &lt;span style="color:#4e9a06">&amp;#39;binding applied&amp;#39;&lt;/span> Binding myIdBinding applied on node aks-nodepool1-15831963-0 &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> pod demo-5788d95785-ghzwv-default-podid
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="check-the-node-managed-identity-pod">Check the Node Managed Identity pod&lt;/h3>
&lt;p>Check the logs of the NMI pod to see only info level logging and 200 responses. If you see 403 or 404 responses, then something is wrong.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">$ kubectl logs nmi-b9xbg
...
&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2018-06-07T01:30:04Z&amp;#34;&lt;/span> &lt;span style="color:#000">level&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>info &lt;span style="color:#000">msg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Status (200) took 55422159 ns&amp;#34;&lt;/span> req.method&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>GET req.path&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/metadata/identity/oauth2/token req.remote&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>10.244.0.25
&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2018-06-07T01:30:04Z&amp;#34;&lt;/span> &lt;span style="color:#000">level&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>info &lt;span style="color:#000">msg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;matched identityType:0 clientid:a40e83f9-6198-4633-afae-d860eb5b7f7c resource:https://management.azure.com/&amp;#34;&lt;/span> req.method&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>GET req.path&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/metadata/identity/oauth2/token req.remote&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>10.244.0.25
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="check-the-demo-pod">Check the demo pod&lt;/h3>
&lt;p>The demo pod should be reporting on the virtual machines in the resource group. If you see intermittant 403 responses, that is OK.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">$ kubectl logs demo-757967c54-64pzr
...
&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2018-06-07T01:32:30Z&amp;#34;&lt;/span> &lt;span style="color:#000">level&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>error &lt;span style="color:#000">msg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;failed list all vm compute.VirtualMachinesClient#List: Failure responding to request: StatusCode=403 -- Original Error: autorest/azure: Service returned an error. Status=403 Code=\&amp;#34;AuthorizationFailed\&amp;#34; Message=\&amp;#34;The client &amp;#39;48affddb-9972-4b7e-a82b-c5d32d2a3dd5&amp;#39; with object id &amp;#39;48affddb-9972-4b7e-a82b-c5d32d2a3dd5&amp;#39; does not have authorization to perform action &amp;#39;Microsoft.Compute/virtualMachines/read&amp;#39; over scope &amp;#39;/subscriptions/c5760548-23c2-4223-b41e-5d68a8320a0c/resourceGroups/MC_k8s-test_clusterFrank_eastus/providers/Microsoft.Compute&amp;#39;.\&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#000">podip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>10.244.0.25 &lt;span style="color:#000">podname&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>demo-757967c54-64pzr &lt;span style="color:#000">podnamespace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>demo-757967c54-64pzr
&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2018-06-07T01:32:30Z&amp;#34;&lt;/span> &lt;span style="color:#000">level&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>info &lt;span style="color:#000">msg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;successfully acquired a token using the MSI, msiEndpoint(http://169.254.169.254/metadata/identity/oauth2/token)&amp;#34;&lt;/span> &lt;span style="color:#000">podip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>10.244.0.25 &lt;span style="color:#000">podname&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>demo-757967c54-64pzr &lt;span style="color:#000">podnamespace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>demo-757967c54-64pzr
&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2018-06-07T01:32:30Z&amp;#34;&lt;/span> &lt;span style="color:#000">level&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>info &lt;span style="color:#000">msg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;successfully acquired a token, userAssignedID MSI, msiEndpoint(http://169.254.169.254/metadata/identity/oauth2/token) clientID(a40e83f9-6198-4633-afae-d860eb5b7f7c)&amp;#34;&lt;/span> &lt;span style="color:#000">podip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>10.244.0.25 &lt;span style="color:#000">podname&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>demo-757967c54-64pzr &lt;span style="color:#000">podnamespace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>demo-757967c54-64pzr
&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2018-06-07T01:32:30Z&amp;#34;&lt;/span> &lt;span style="color:#000">level&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>info &lt;span style="color:#000">msg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;successfully made GET on instance metadata, {\&amp;#34;compute\&amp;#34;:{\&amp;#34;location\&amp;#34;:\&amp;#34;eastus\&amp;#34;,\&amp;#34;name\&amp;#34;:\&amp;#34;aks-nodepool1-15831963-0\&amp;#34;,\&amp;#34;offer\&amp;#34;:\&amp;#34;UbuntuServer\&amp;#34;,\&amp;#34;osType\&amp;#34;:\&amp;#34;Linux\&amp;#34;,\&amp;#34;placementGroupId\&amp;#34;:\&amp;#34;\&amp;#34;,\&amp;#34;platformFaultDomain\&amp;#34;:\&amp;#34;0\&amp;#34;,\&amp;#34;platformUpdateDomain\&amp;#34;:\&amp;#34;0\&amp;#34;,\&amp;#34;publisher\&amp;#34;:\&amp;#34;Canonical\&amp;#34;,\&amp;#34;resourceGroupName\&amp;#34;:\&amp;#34;MC_k8s-test_clusterFrank_eastus\&amp;#34;,\&amp;#34;sku\&amp;#34;:\&amp;#34;16.04-LTS\&amp;#34;,\&amp;#34;subscriptionId\&amp;#34;:\&amp;#34;c5760548-23c2-4223-b41e-5d68a8320a0c\&amp;#34;,\&amp;#34;tags\&amp;#34;:\&amp;#34;acsengineVersion:v0.17.0-aks;creationSource:aks-aks-nodepool1-15831963-0;orchestrator:Kubernetes:1.9.6;poolName:nodepool1;resourceNameSuffix:15831963\&amp;#34;,\&amp;#34;version\&amp;#34;:\&amp;#34;16.04.201805090\&amp;#34;,\&amp;#34;vmId\&amp;#34;:\&amp;#34;3fea4c7e-4aaf-400f-a588-2a851f6fd0cf\&amp;#34;,\&amp;#34;vmSize\&amp;#34;:\&amp;#34;Standard_DS1_v2\&amp;#34;},\&amp;#34;network\&amp;#34;:{\&amp;#34;interface\&amp;#34;:[{\&amp;#34;ipv4\&amp;#34;:{\&amp;#34;ipAddress\&amp;#34;:[{\&amp;#34;privateIpAddress\&amp;#34;:\&amp;#34;10.240.0.4\&amp;#34;,\&amp;#34;publicIpAddress\&amp;#34;:\&amp;#34;\&amp;#34;}],\&amp;#34;subnet\&amp;#34;:[{\&amp;#34;address\&amp;#34;:\&amp;#34;10.240.0.0\&amp;#34;,\&amp;#34;prefix\&amp;#34;:\&amp;#34;16\&amp;#34;}]},\&amp;#34;ipv6\&amp;#34;:{\&amp;#34;ipAddress\&amp;#34;:[]},\&amp;#34;macAddress\&amp;#34;:\&amp;#34;000D3A13DEE3\&amp;#34;}]}}&amp;#34;&lt;/span> &lt;span style="color:#000">podip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>10.244.0.25 &lt;span style="color:#000">podname&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>demo-757967c54-64pzr &lt;span style="color:#000">podnamespace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>demo-757967c54-64pzr
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="check-the-descriptions">Check the descriptions&lt;/h3>
&lt;p>&lt;code>kubectl describe azureidentity&lt;/code>&lt;/p>
&lt;p>&lt;code>kubectl describe azureidentitybinding&lt;/code>&lt;/p>
&lt;h3 id="aad-pod-identity-in-action">AAD Pod Identity In Action&lt;/h3>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=BXhIMJYDO4w">&lt;img src="https://img.youtube.com/vi/BXhIMJYDO4w/0.jpg" alt="Video of Running required commands">&lt;/a>&lt;/p></description></item><item><title>Docs: Deploy AAD Pod Identity in a Cluster with Kubenet</title><link>https://azure.github.io/aad-pod-identity/docs/configure/aad_pod_identity_on_kubenet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/configure/aad_pod_identity_on_kubenet/</guid><description>
&lt;blockquote>
&lt;p>Starting from 1.7 release&lt;/p>
&lt;/blockquote>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>AAD Pod Identity is disabled by default on clusters with Kubenet network plugin. The NMI pods will fail to run with error &lt;code>AAD Pod Identity is not supported for Kubenet&lt;/code>.&lt;/p>
&lt;h2 id="why-this-change">Why this change?&lt;/h2>
&lt;p>Kubenet network plugin is susceptible to ARP spoofing. This makes it possible for pods to impersonate as a pod with access to an identity. Using &lt;code>CAP_NET_RAW&lt;/code> capability the attacker pod could then request token as a pod it&amp;rsquo;s impersonating.&lt;/p>
&lt;p>Network plugins like Azure CNI, Calico, Cilium prevents ARP Spoofing.&lt;/p>
&lt;h2 id="mitigation-steps-to-take-before-running-clusters-with-kubenet">Mitigation steps to take before running clusters with Kubenet&lt;/h2>
&lt;p>The recommended steps to take before configuring AAD Pod Identity to run on clusters with Kubenet network plugin&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Add a &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/security-context/">&lt;code>securityContext&lt;/code>&lt;/a> that drops the &lt;code>NET_RAW&lt;/code> capability by default in your applications.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">securityContext&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">capabilities&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">drop&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">NET_RAW&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This shouldnâ€™t affect most applications, since it&amp;rsquo;s only needed for applications that do deep networking inspection/manipulation. Dropping this capability will make sure even if your application code got compromised, the attacker could not perform such network-based attacks on your cluster.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="how-to-run-aad-pod-identity-on-clusters-with-kubenet">How to run AAD Pod Identity on clusters with Kubenet&lt;/h2>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
Running aad-pod-identity in a cluster with Kubenet is not a recommended configuration because of the security implication. Please follow the mitigation steps and configure policies before enabling aad-pod-identity in a cluster with Kubenet.
&lt;/div>
&lt;p>Set the &lt;code>--allow-network-plugin-kubenet=true&lt;/code> arg in the NMI container (or &lt;code>--set nmi.allowNetworkPluginKubenet=true&lt;/code> if deploying with Helm) to continue running on clusters with Kubenet.&lt;/p>
&lt;p>To mitigate the vulnerability at the cluster level, you can use &lt;a href="https://www.openpolicyagent.org/">OpenPolicyAgent&lt;/a> admission controller together with &lt;a href="https://github.com/open-policy-agent/gatekeeper">Gatekeeper&lt;/a> validating webhook.&lt;/p>
&lt;p>Provided you have Gatekeeper already installed in your cluster, add the &lt;code>ConstraintTemplate&lt;/code> of type &lt;code>K8sPSPCapabilities&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/capabilities/template.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add a template to limit the spawning of Pods with the &lt;code>NET_RAW&lt;/code> capability:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">constraints.gatekeeper.sh/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">K8sPSPCapabilities&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">prevent-net-raw&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">match&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kinds&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">apiGroups&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kinds&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Pod&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">excludedNamespaces&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;kube-system&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">parameters&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">requiredDropCapabilities&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;NET_RAW&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can either &lt;a href="https://github.com/open-policy-agent/gatekeeper/blob/master/README.md#exempting-namespaces-from-gatekeeper">exclude specific namespaces&lt;/a> like in the example above or explicitly include namespaces with &lt;code>spec.match.namespaces&lt;/code>.&lt;/p></description></item><item><title>Docs: Deploy AAD Pod Identity with a Dedicated Service Principal</title><link>https://azure.github.io/aad-pod-identity/docs/configure/deploy_aad_pod_dedicated_sp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/configure/deploy_aad_pod_dedicated_sp/</guid><description>
&lt;blockquote>
&lt;p>Available from 1.5 release&lt;/p>
&lt;/blockquote>
&lt;h2 id="the-why">The why&lt;/h2>
&lt;p>Goal: To enable user to use a separate service principal (aad-pod-identity admin service principal) other than the cluster service principal and to move away from &lt;code>/etc/kubernetes/azure.json&lt;/code>.&lt;/p>
&lt;p>Users now have the option to deploy aad-pod-identity with a separate service principal which is together with its secret and other configurations stored in a Kubernetes secret object.&lt;/p>
&lt;h2 id="permissions">Permissions&lt;/h2>
&lt;p>The permission of the admin service principal needs to be &amp;lsquo;Contributor&amp;rsquo; role over the scope of node resource group starting with &amp;ldquo;MC_&amp;rdquo;.&lt;/p>
&lt;p>Create a new service principal with the permission:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">az ad sp create-for-rbac -n &lt;span style="color:#4e9a06">&amp;#34;&amp;lt;sp_name&amp;gt;&amp;#34;&lt;/span> --role &lt;span style="color:#4e9a06">&amp;#34;Contributor&amp;#34;&lt;/span> --scopes &lt;span style="color:#4e9a06">&amp;#34;/subscriptions/&amp;lt;subscription-id&amp;gt;/resourceGroups/&amp;lt;MC_node_resource_group&amp;gt;&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Note the &lt;code>appId&lt;/code> (client id), &lt;code>password&lt;/code> (secret) and &lt;code>tenant&lt;/code> from the resulting json, which will be used in creating the admin secret.&lt;/p>
&lt;/blockquote>
&lt;p>Or assign the permission for an existing service principal:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">az role assignment create --role &lt;span style="color:#4e9a06">&amp;#34;Contributor&amp;#34;&lt;/span> --assignee &amp;lt;sp_id&amp;gt; --scope &lt;span style="color:#4e9a06">&amp;#34;/subscriptions/&amp;lt;subscription-id&amp;gt;/resourceGroups/&amp;lt;MC_node_resource_group&amp;gt;&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For any subsequent user assigned managed identity that&amp;rsquo;s intended for a pod, it&amp;rsquo;s also required to grant the service principal &amp;lsquo;Managed Identity Operator&amp;rsquo; permission (also stated &lt;a href="../../getting-started/role-assignment/">here&lt;/a>):&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">az role assignment create --role &lt;span style="color:#4e9a06">&amp;#34;Managed Identity Operator&amp;#34;&lt;/span> --assignee &amp;lt;sp_id&amp;gt; --scope &amp;lt;resource id of the managed identity&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-the-admin-secret">Create the admin secret&lt;/h2>
&lt;p>The &lt;code>aadpodidentity-admin-secret&lt;/code> contains the following fields:&lt;/p>
&lt;ul>
&lt;li>Cloud: &lt;code>&amp;lt;base64-encoded-cloud&amp;gt;&lt;/code>
&lt;ul>
&lt;li>&amp;lsquo;Cloud&amp;rsquo; should be chosen from the following case-insensitive values: &lt;code>AzurePublicCloud&lt;/code>, &lt;code>AzureUSGovernmentCloud&lt;/code>, &lt;code>AzureChinaCloud&lt;/code>, &lt;code>AzureGermanCloud&lt;/code> (values taken from &lt;a href="https://raw.githubusercontent.com/Azure/go-autorest/master/autorest/azure/environments.go">here&lt;/a>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>SubscriptionID: &lt;code>&amp;lt;base64-encoded-subscription-id&amp;gt;&lt;/code>&lt;/li>
&lt;li>ResourceGroup: &lt;code>&amp;lt;base64-encoded-resource-group&amp;gt;&lt;/code>
&lt;ul>
&lt;li>&amp;lsquo;ResourceGroup&amp;rsquo; is the node resource group where the actual virtual machines or virtual machine scale set resides.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>VMType: &lt;code>&amp;lt;base64-encoded-vm-type&amp;gt;&lt;/code>
&lt;ul>
&lt;li>&amp;lsquo;VMType&amp;rsquo; is optional and can be one of these values: &lt;code>standard&lt;/code> for normal virtual machine nodes, and &lt;code>vmss&lt;/code> for cluster deployed with a virtual machine scale set.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TenantID: &lt;code>&amp;lt;base64-encoded-tenant-id&amp;gt;&lt;/code>&lt;/li>
&lt;li>ClientID: &lt;code>&amp;lt;base64-encoded-client-id&amp;gt;&lt;/code>&lt;/li>
&lt;li>ClientSecret: &lt;code>&amp;lt;base64-encoded-client-secret&amp;gt;&lt;/code>
&lt;ul>
&lt;li>&amp;lsquo;TenantID&amp;rsquo;, &amp;lsquo;ClientID&amp;rsquo; and &amp;lsquo;ClientSecret&amp;rsquo; are service principal&amp;rsquo;s &lt;code>tenant&lt;/code>, &lt;code>appId&lt;/code>, &lt;code>password&lt;/code> respectively.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Use &lt;code>echo -n 'secret-content' | base64&lt;/code> to create a base64 encoded string.&lt;/p>
&lt;/blockquote>
&lt;p>Fill out those secret values in the /deploy/infra/noazurejson/deployment.yaml or /deploy/infra/noazurejson/deployment-rbac.yaml before executing &lt;code>kubectl create -f ./deploy/infra/noazurejson/deployment.yaml&lt;/code> or &lt;code>kubectl create -f ./deploy/infra/noazurejson/deployment-rbac.yaml&lt;/code>.&lt;/p>
&lt;blockquote>
&lt;p>Note that if not use the above yaml&amp;rsquo;s, &lt;code>aadpodidentity-admin-secret&lt;/code> must be created before deploying &lt;code>mic&lt;/code> and &lt;code>mic&lt;/code> must reference the secret as shown in the yaml&amp;rsquo;s.&lt;/p>
&lt;/blockquote>
&lt;p>The secret will be injected as an environment variable into &lt;code>mic&lt;/code> upon pod creation and cannot be updated during the lifecycle of &lt;code>mic&lt;/code>. However, redeploying &lt;code>mic&lt;/code> should pick up the updated service principal&amp;rsquo;s information should they change.&lt;/p></description></item><item><title>Docs: Installation</title><link>https://azure.github.io/aad-pod-identity/docs/getting-started/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/getting-started/installation/</guid><description>
&lt;h2 id="quick-install">Quick Install&lt;/h2>
&lt;p>To install/upgrade AAD Pod Identity on RBAC-enabled clusters:&lt;/p>
&lt;pre>&lt;code>kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/v1.8.17/deploy/infra/deployment-rbac.yaml
&lt;/code>&lt;/pre>&lt;details>
&lt;summary>Result&lt;/summary>
&lt;pre>&lt;code>serviceaccount/aad-pod-id-nmi-service-account created
customresourcedefinition.apiextensions.k8s.io/azureassignedidentities.aadpodidentity.k8s.io created
customresourcedefinition.apiextensions.k8s.io/azureidentitybindings.aadpodidentity.k8s.io created
customresourcedefinition.apiextensions.k8s.io/azureidentities.aadpodidentity.k8s.io created
customresourcedefinition.apiextensions.k8s.io/azurepodidentityexceptions.aadpodidentity.k8s.io created
clusterrole.rbac.authorization.k8s.io/aad-pod-id-nmi-role created
clusterrolebinding.rbac.authorization.k8s.io/aad-pod-id-nmi-binding created
daemonset.apps/nmi created
serviceaccount/aad-pod-id-mic-service-account created
clusterrole.rbac.authorization.k8s.io/aad-pod-id-mic-role created
clusterrolebinding.rbac.authorization.k8s.io/aad-pod-id-mic-binding created
deployment.apps/mic created
&lt;/code>&lt;/pre>&lt;/details>&lt;br/>
&lt;p>To install/upgrade aad-pod-identity on RBAC-disabled clusters:&lt;/p>
&lt;pre>&lt;code>kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/v1.8.17/deploy/infra/deployment.yaml
&lt;/code>&lt;/pre>&lt;details>
&lt;summary>Result&lt;/summary>
&lt;pre>&lt;code>customresourcedefinition.apiextensions.k8s.io/azureassignedidentities.aadpodidentity.k8s.io created
customresourcedefinition.apiextensions.k8s.io/azureidentitybindings.aadpodidentity.k8s.io created
customresourcedefinition.apiextensions.k8s.io/azureidentities.aadpodidentity.k8s.io created
customresourcedefinition.apiextensions.k8s.io/azurepodidentityexceptions.aadpodidentity.k8s.io created
daemonset.apps/nmi created
deployment.apps/mic created
&lt;/code>&lt;/pre>&lt;/details>&lt;br/>
&lt;p>For AKS clusters, you will have to allow MIC and AKS add-ons to access IMDS without being intercepted by NMI:&lt;/p>
&lt;pre>&lt;code>kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/v1.8.17/deploy/infra/mic-exception.yaml
&lt;/code>&lt;/pre>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
failure to apply &lt;code>mic-exception.yaml&lt;/code> in AKS clusters will result in token failures for AKS addons using managed identity for authentication.
&lt;/div>
&lt;details>
&lt;summary>Result&lt;/summary>
&lt;pre>&lt;code>azurepodidentityexception.aadpodidentity.k8s.io/mic-exception created
azurepodidentityexception.aadpodidentity.k8s.io/aks-addon-exception created
&lt;/code>&lt;/pre>&lt;/details>
&lt;h2 id="helm">Helm&lt;/h2>
&lt;p>AAD Pod Identity allows users to customize their installation via Helm.&lt;/p>
&lt;pre>&lt;code>helm repo add aad-pod-identity https://raw.githubusercontent.com/Azure/aad-pod-identity/master/charts
helm install aad-pod-identity aad-pod-identity/aad-pod-identity
&lt;/code>&lt;/pre>&lt;h3 id="values">Values&lt;/h3>
&lt;p>For a list of customizable values that can be injected when invoking &lt;code>helm install&lt;/code>, please see the &lt;a href="https://github.com/Azure/aad-pod-identity/tree/master/charts/aad-pod-identity#configuration">Helm chart configurations&lt;/a>.&lt;/p></description></item><item><title>Docs: Setup AAD Pod Identity on Azure RedHat OpenShift (ARO)</title><link>https://azure.github.io/aad-pod-identity/docs/configure/deploy_in_openshift/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/configure/deploy_in_openshift/</guid><description>
&lt;h3 id="installation">Installation&lt;/h3>
&lt;h4 id="standard-mode">Standard mode&lt;/h4>
&lt;p>The MIC component by default relies on &lt;code>/etc/kubernetes/azure.json&lt;/code> to get cluster configuration and credentials. Since the &lt;code>/etc/kubernetes/azure.json&lt;/code> doesn&amp;rsquo;t exist in ARO clusters, the AAD Pod Identity components will need to be deployed with a dedicated SP/managed identity to provide access to Azure.&lt;/p>
&lt;h5 id="helm">Helm&lt;/h5>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">helm repo add aad-pod-identity https://raw.githubusercontent.com/Azure/aad-pod-identity/master/charts
&lt;span style="color:#8f5902;font-style:italic"># Helm 3&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># If using managed identity to provide MIC access to Azure, then set adminsecret.clientID=msi and adminsecret.clientSecret=msi&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Set adminsecret.useMSI=false if using service principal to provide MIC access to Azure&lt;/span>
helm install aad-pod-identity aad-pod-identity/aad-pod-identity &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --set adminsecret.cloud&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;azure cloud name&amp;gt; &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --set adminsecret.subscriptionID&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;subscription id&amp;gt; &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --set adminsecret.resourceGroup&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;node resource group&amp;gt; &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --set adminsecret.vmType&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>vmss &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --set adminsecret.tenantID&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;tenant id&amp;gt; &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --set adminsecret.clientID&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;service principal clientID&amp;gt; &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --set adminsecret.clientSecret&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;service principal clientSecret&amp;gt; &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --set-string adminsecret.useMSI&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">false&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --set adminsecret.userAssignedMSIClientID&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;ClientID from identity&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="using-deployment-yamls">Using deployment yamls&lt;/h5>
&lt;p>If deploying using deployment yamls, refer to the &lt;a href="../deploy_aad_pod_dedicated_sp">doc here&lt;/a>.&lt;/p>
&lt;h4 id="managed-mode">Managed mode&lt;/h4>
&lt;p>Follow the &lt;a href="../pod_identity_in_managed_mode">docs here&lt;/a> on how to install AAD Pod Identity in managed mode.&lt;/p>
&lt;h3 id="validate-pod-identity-components-are-running">Validate pod identity components are running&lt;/h3>
&lt;ol>
&lt;li>If deploying in standard mode, check the MIC pods are up and running.&lt;/li>
&lt;li>Check if NMI is running on all nodes.&lt;/li>
&lt;li>Follow the &lt;a href="../../troubleshooting/#ensure-that-iptables-rule-exists">doc here&lt;/a> to ensure the iptables rules exist.&lt;/li>
&lt;/ol></description></item><item><title>Docs: Spring Boot + Azure Storage + AAD Pod Identity</title><link>https://azure.github.io/aad-pod-identity/docs/demo/java-blob/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/demo/java-blob/</guid><description>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ul>
&lt;li>an AKS cluster with &lt;a href="https://docs.microsoft.com/en-us/azure/aks/use-managed-identity">managed identity enabled&lt;/a>&lt;/li>
&lt;li>AAD Pod Identity installed and configured&lt;/li>
&lt;li>Azure Container Registry&lt;/li>
&lt;li>Azure Storage
&lt;ul>
&lt;li>Make sure you have already created a container&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="setup">Setup&lt;/h2>
&lt;h3 id="create-a-managed-identity-and-assign-roles">Create a Managed Identity and Assign Roles&lt;/h3>
&lt;p>In this step, we&amp;rsquo;ll create a new user-assigned identity which will be used to interact with the Azure Storage account.&lt;/p>
&lt;blockquote>
&lt;p>this step can be skipped if you already have a managed identity you&amp;rsquo;d like to reuse.&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>
&lt;p>Setup:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">git clone https://github.com/Azure/aad-pod-identity &lt;span style="color:#000">$GOPATH&lt;/span>/src/github.com/Azure/aad-pod-identity
&lt;span style="color:#204a87">cd&lt;/span> &lt;span style="color:#000">$GOPATH&lt;/span>/src/github.com/Azure/aad-pod-identity/examples/java-blob
&lt;span style="color:#000">CLUSTER_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;YOUR_AKS_CLUSTER_NAME&amp;gt;
&lt;span style="color:#000">CLUSTER_RESOURCE_GROUP&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>az aks list --query &lt;span style="color:#4e9a06">&amp;#34;[?name == &amp;#39;&lt;/span>&lt;span style="color:#000">$CLUSTER_NAME&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;].resourceGroup&amp;#34;&lt;/span> -o tsv&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">IDENTITY_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;YOUR_IDENTITY_NAME&amp;gt;
&lt;span style="color:#000">IDENTITY_RESOURCE_GROUP&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>az aks show -g &lt;span style="color:#000">$CLUSTER_RESOURCE_GROUP&lt;/span> -n &lt;span style="color:#000">$CLUSTER_NAME&lt;/span> --query nodeResourceGroup -otsv&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">STORAGE_ACCOUNT_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;STORAGE_ACCOUNT_NAME&amp;gt;
&lt;span style="color:#000">STORAGE_ACCOUNT_RESOURCE_GROUP&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>az storage account list --query &lt;span style="color:#4e9a06">&amp;#34;[?name == &amp;#39;&lt;/span>&lt;span style="color:#000">$STORAGE_ACCOUNT_NAME&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;].resourceGroup&amp;#34;&lt;/span> -o tsv&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">CLUSTER_MSI_CLIENT_ID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>az aks show &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> -n &lt;span style="color:#000">$CLUSTER_NAME&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> -g &lt;span style="color:#000">$CLUSTER_RESOURCE_GROUP&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --query &lt;span style="color:#4e9a06">&amp;#34;identityProfile.kubeletidentity.clientId&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> -o tsv&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">STORAGE_ACCOUNT_RESOURCE_ID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>az storage account show &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --name &lt;span style="color:#000">$STORAGE_ACCOUNT_NAME&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --query &lt;span style="color:#4e9a06">&amp;#39;id&amp;#39;&lt;/span> -o tsv&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Create a managed identity:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#000">IDENTITY_RESOURCE_ID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>az identity create &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --name &lt;span style="color:#000">$IDENTITY_NAME&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --resource-group &lt;span style="color:#000">$IDENTITY_RESOURCE_GROUP&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --query &lt;span style="color:#4e9a06">&amp;#39;id&amp;#39;&lt;/span> -o tsv&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">IDENTITY_CLIENT_ID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>az identity show &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> -n &lt;span style="color:#000">$IDENTITY_NAME&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> -g &lt;span style="color:#000">$IDENTITY_RESOURCE_GROUP&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --query &lt;span style="color:#4e9a06">&amp;#39;clientId&amp;#39;&lt;/span> -o tsv&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Assign role to allow AAD Pod Identity to access our newly created managed identity:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">az role assignment create &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --role &lt;span style="color:#4e9a06">&amp;#34;Managed Identity Operator&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --assignee &lt;span style="color:#000">$CLUSTER_MSI_CLIENT_ID&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --scope &lt;span style="color:#000">$IDENTITY_RESOURCE_ID&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Grant permission to specific storage container in the Azure Storage Account:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#000">CONTAINER&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">test&lt;/span>
az role assignment create &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --role &lt;span style="color:#4e9a06">&amp;#34;Storage Blob Data Contributor&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --assignee &lt;span style="color:#000">$IDENTITY_CLIENT_ID&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --scope &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000">$STORAGE_ACCOUNT_RESOURCE_ID&lt;/span>&lt;span style="color:#4e9a06">/blobServices/default/containers/&lt;/span>&lt;span style="color:#000">$CONTAINER&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>if you want the managed identity to access your entire Storage Account, you can ignore &lt;code>/blobServices/default/containers/$CONTAINER&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;h3 id="configure-aad-pod-identity">Configure AAD Pod Identity&lt;/h3>
&lt;p>The following step will create a new &lt;code>AzureIdentity&lt;/code> resource in Kubernetes in the &lt;code>blob&lt;/code> namespace. If your namespace is something different then change NAMESPACE to match the namespace you want to deploy into.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#000">NAMESPACE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>blob
kubectl create namespace &lt;span style="color:#000">$NAMESPACE&lt;/span>
cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt; EOF | kubectl apply -f -
&lt;/span>&lt;span style="color:#4e9a06">apiVersion: &amp;#34;aadpodidentity.k8s.io/v1&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06">kind: AzureIdentity
&lt;/span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;span style="color:#4e9a06"> name: $IDENTITY_NAME
&lt;/span>&lt;span style="color:#4e9a06"> namespace: $NAMESPACE
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> type: 0
&lt;/span>&lt;span style="color:#4e9a06"> resourceID: $IDENTITY_RESOURCE_ID
&lt;/span>&lt;span style="color:#4e9a06"> clientID: $IDENTITY_CLIENT_ID
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we&amp;rsquo;ll create the &lt;code>AzureIdentityBinding&lt;/code> and specify the selector.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#000">POD_LABEL_SELECTOR&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$IDENTITY_NAME&lt;/span>
cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt; EOF | kubectl apply -f -
&lt;/span>&lt;span style="color:#4e9a06">apiVersion: aadpodidentity.k8s.io/v1
&lt;/span>&lt;span style="color:#4e9a06">kind: AzureIdentityBinding
&lt;/span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;span style="color:#4e9a06"> name: $IDENTITY_NAME-binding
&lt;/span>&lt;span style="color:#4e9a06"> namespace: $NAMESPACE
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> azureIdentity: $IDENTITY_NAME
&lt;/span>&lt;span style="color:#4e9a06"> selector: $POD_LABEL_SELECTOR
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="build">Build&lt;/h2>
&lt;p>In the root of this project contains a &lt;code>Dockerfile&lt;/code>. All you need to do is build the container and push to Azure Container Registry.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#000">ACR&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;YOUR_ACR&amp;gt;
&lt;span style="color:#000">IMG&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$ACR&lt;/span>.azurecr.io/azure-storage-example:1
az acr login --name &lt;span style="color:#000">$ACR&lt;/span>
docker build -t &lt;span style="color:#000">$IMG&lt;/span> .
docker push &lt;span style="color:#000">$IMG&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="deploy">Deploy&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt; EOF | kubectl apply -f -
&lt;/span>&lt;span style="color:#4e9a06">apiVersion: apps/v1
&lt;/span>&lt;span style="color:#4e9a06">kind: Deployment
&lt;/span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;span style="color:#4e9a06"> name: demo-blob-deployment
&lt;/span>&lt;span style="color:#4e9a06"> namespace: $NAMESPACE
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> replicas: 1
&lt;/span>&lt;span style="color:#4e9a06"> selector:
&lt;/span>&lt;span style="color:#4e9a06"> matchLabels:
&lt;/span>&lt;span style="color:#4e9a06"> name: demo-blob
&lt;/span>&lt;span style="color:#4e9a06"> template:
&lt;/span>&lt;span style="color:#4e9a06"> metadata:
&lt;/span>&lt;span style="color:#4e9a06"> name: demo-blob
&lt;/span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;span style="color:#4e9a06"> name: demo-blob
&lt;/span>&lt;span style="color:#4e9a06"> aadpodidbinding: $POD_LABEL_SELECTOR
&lt;/span>&lt;span style="color:#4e9a06"> spec:
&lt;/span>&lt;span style="color:#4e9a06"> containers:
&lt;/span>&lt;span style="color:#4e9a06"> - name: demo-blob
&lt;/span>&lt;span style="color:#4e9a06"> image: $IMG
&lt;/span>&lt;span style="color:#4e9a06"> env:
&lt;/span>&lt;span style="color:#4e9a06"> - name: AZURE_CLIENT_ID
&lt;/span>&lt;span style="color:#4e9a06"> value: $IDENTITY_CLIENT_ID
&lt;/span>&lt;span style="color:#4e9a06"> - name: BLOB_ACCOUNT_NAME
&lt;/span>&lt;span style="color:#4e9a06"> value: $STORAGE_ACCOUNT_NAME
&lt;/span>&lt;span style="color:#4e9a06"> - name: BLOB_CONTAINER_NAME
&lt;/span>&lt;span style="color:#4e9a06"> value: $CONTAINER
&lt;/span>&lt;span style="color:#4e9a06"> nodeSelector:
&lt;/span>&lt;span style="color:#4e9a06"> kubernetes.io/os: linux
&lt;/span>&lt;span style="color:#4e9a06">---
&lt;/span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;span style="color:#4e9a06">kind: Service
&lt;/span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;span style="color:#4e9a06"> name: demo-blob-service
&lt;/span>&lt;span style="color:#4e9a06"> namespace: $NAMESPACE
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> type: NodePort
&lt;/span>&lt;span style="color:#4e9a06"> selector:
&lt;/span>&lt;span style="color:#4e9a06"> name: demo-blob
&lt;/span>&lt;span style="color:#4e9a06"> ports:
&lt;/span>&lt;span style="color:#4e9a06"> - port: 8080
&lt;/span>&lt;span style="color:#4e9a06"> targetPort: 8080
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="test">Test&lt;/h2>
&lt;p>To interact with the &lt;code>demo-blob&lt;/code> pod running in AKS, we first need a pod with cURL installed. The following command create a new pod called &lt;code>curl&lt;/code> using the &lt;code>curlimages/curl&lt;/code> image, and then execute into the pod.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">kubectl run curl --rm -i --tty --image&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>curlimages/curl:7.73.0 -n blob -- sh
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once you have access into the &lt;code>curl&lt;/code> pod, run the following command to upload a new blob into the Azure Storage Account:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">curl -d &lt;span style="color:#4e9a06">&amp;#39;new message&amp;#39;&lt;/span> -H &lt;span style="color:#4e9a06">&amp;#39;Content-Type: text/plain&amp;#39;&lt;/span> demo-blob-service:8080/
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Assuming everything works, this will create a new &lt;code>.txt&lt;/code> file the container created earlier with the text &lt;code>new message&lt;/code>.&lt;/p>
&lt;p>You should receive the following message:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">file quickstart-8fea77d9-d133-4cb1-8f16-391dc8e4e3f7.txt was uploaded
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To retrieve the contents of the blob, assuming the file was saved under &lt;code>quickstart-8fea77d9-d133-4cb1-8f16-391dc8e4e3f7.txt&lt;/code>, make the following &lt;code>GET&lt;/code> request:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">curl -X GET http://demo-blob-service:8080/?fileName&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>quickstart-8fea77d9-d133-4cb1-8f16-391dc8e4e3f7.txt
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should get back the following:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">new message
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: AzureAssignedIdentity</title><link>https://azure.github.io/aad-pod-identity/docs/concepts/azureassignedidentity/</link><pubDate>Tue, 03 Nov 2020 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/concepts/azureassignedidentity/</guid><description>
&lt;blockquote>
&lt;p>Note: the lifecycle of &lt;code>AzureAssignedIdentity&lt;/code> is fully managed by &lt;a href="../block-diagram-and-design">MIC&lt;/a>. Users should not manually modify the fields.&lt;/p>
&lt;/blockquote>
&lt;h2 id="azureassignedidentity">&lt;code>AzureAssignedIdentity&lt;/code>&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code>&lt;br>&lt;em>string&lt;/em>&lt;/td>
&lt;td>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code>&lt;br>&lt;em>string&lt;/em>&lt;/td>
&lt;td>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>metadata&lt;/code>&lt;br>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#objectmeta-v1-meta">&lt;em>&lt;code>ObjectMeta&lt;/code>&lt;/em>&lt;/a>&lt;/td>
&lt;td>Standard object&amp;rsquo;s metadata. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>spec&lt;/code>&lt;br>&lt;a href="#azureassignedidentityspec">&lt;em>&lt;code>AzureAssignedIdentitySpec&lt;/code>&lt;/em>&lt;/a>&lt;/td>
&lt;td>Describes the current state of identity binding relationship between an &lt;a href="../azureidentity">&lt;code>AzureIdentity&lt;/code>&lt;/a> and a pod.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="azureassignedidentityspec">&lt;code>AzureAssignedIdentitySpec&lt;/code>&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>azureIdentityRef&lt;/code>&lt;br>&lt;a href="../azureidentity">&lt;em>AzureIdentity&lt;/em>&lt;/a>&lt;/td>
&lt;td>The &lt;a href="../azureidentity">&lt;code>AzureIdentity&lt;/code>&lt;/a> that is bound to the pod.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>azureBindingRef&lt;/code>&lt;br>&lt;a href="../azureidentitybinding">&lt;em>AzureIdentityBinding&lt;/em>&lt;/a>&lt;/td>
&lt;td>The &lt;a href="../azureidentitybinding">&lt;code>AzureIdentityBinding&lt;/code>&lt;/a> that is binding the &lt;a href="../azureidentity">&lt;code>AzureIdentity&lt;/code>&lt;/a> and the pod together.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>pod&lt;/code>&lt;br>&lt;em>string&lt;/em>&lt;/td>
&lt;td>The name of the pod that is bound to the &lt;a href="../azureidentity">&lt;code>AzureIdentity&lt;/code>&lt;/a>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>podNamespace&lt;/code>&lt;br>&lt;em>string&lt;/em>&lt;/td>
&lt;td>The namespace of the pod that is bound to the &lt;a href="../azureidentity">&lt;code>AzureIdentity&lt;/code>&lt;/a>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>nodename&lt;/code>&lt;br>&lt;em>string&lt;/em>&lt;/td>
&lt;td>The name of the node that the pod is scheduled to.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: Disable AAD Pod Identity for a specific Pod/Application</title><link>https://azure.github.io/aad-pod-identity/docs/configure/application_exception/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/configure/application_exception/</guid><description>
&lt;blockquote>
&lt;p>Available from 1.5 release&lt;/p>
&lt;/blockquote>
&lt;p>NMI pods modify the nodes' iptables to intercept calls to Azure Instance Metadata endpoint. This means any request that&amp;rsquo;s made to the Metadata endpoint will be intercepted by NMI even if the pod doesn&amp;rsquo;t use aad-pod-identity. &lt;code>AzurePodIdentityException&lt;/code> CRD can be configured to inform aad-pod-identity that any requests to metadata endpoint originating from a pod that matches labels defined in CRD should be proxied without any processing in NMI. NMI will proxy the request to the metdata endpoint and return the token back as is without any validation.&lt;/p>
&lt;ol>
&lt;li>Create the &lt;code>AzurePodIdentityException&lt;/code> with the same label that will be defined in the pod -&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;aadpodidentity.k8s.io/v1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">AzurePodIdentityException&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">test-exception&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">podLabels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">foo&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">bar&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">app&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">custom&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use the &lt;a href="https://github.com/Azure/aad-pod-identity/blob/master/examples/azurepodidentityexception.yaml">sample template&lt;/a>, replace the podLabels with a list of desired values and then create the resource on the cluster:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/examples/azurepodidentityexception.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>When creating application pods that will not be using aad-pod-identity for calls to Azure Instance Metadata endpoint, include at least one of the labels in &lt;code>spec.template.metadata.labels&lt;/code>.&lt;/p>
&lt;p>Example pod with same label as above defined in the spec -&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">apps/v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Deployment&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">sample&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">labels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">app&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">sample&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">replicas&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">selector&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">matchLabels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">app&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">sample&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">template&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">labels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">app&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">sample&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">foo&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">bar &amp;lt;------- Label defined in exception CRD included in deployment&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">...]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To verify the pods have the right label that match the ones defined in the exception crd -&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">kubectl get pods --show-labels
NAME READY STATUS RESTARTS AGE LABELS
sample-td 1/1 Running &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 16s &lt;span style="color:#000">app&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>sample,foo&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>bar
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>NOTE&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>AzurePodIdentityException&lt;/code> is per namespace. This means if the same label needs to be used in multiple namespaces to except pods, a CRD resource needs to be created in each namespace.&lt;/li>
&lt;li>All the labels defined in the exception CRD doesn&amp;rsquo;t need to be defined in the deployment/pod spec. A single match is enough for the pod to be excepted.&lt;/li>
&lt;/ul></description></item><item><title>Docs: Quickstart Demo</title><link>https://azure.github.io/aad-pod-identity/docs/demo/quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/demo/quickstart/</guid><description/></item><item><title>Docs: AzurePodIdentityException</title><link>https://azure.github.io/aad-pod-identity/docs/concepts/azurepodidentityexception/</link><pubDate>Tue, 03 Nov 2020 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/concepts/azurepodidentityexception/</guid><description>
&lt;details>
&lt;summary>Examples&lt;/summary>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;aadpodidentity.k8s.io/v1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">AzurePodIdentityException&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">aks-addon-exception&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">namespace&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">kube-system&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">podLabels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kubernetes.azure.com/managedby&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">aks&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>
&lt;h2 id="azurepodidentityexception">&lt;code>AzurePodIdentityException&lt;/code>&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>apiVersion&lt;/code>&lt;br>&lt;em>string&lt;/em>&lt;/td>
&lt;td>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kind&lt;/code>&lt;br>&lt;em>string&lt;/em>&lt;/td>
&lt;td>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>metadata&lt;/code>&lt;br>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#objectmeta-v1-meta">&lt;em>&lt;code>ObjectMeta&lt;/code>&lt;/em>&lt;/a>&lt;/td>
&lt;td>Standard object&amp;rsquo;s metadata. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>spec&lt;/code>&lt;br>&lt;a href="#azurepodidentityexceptionspec">&lt;em>&lt;code>AzurePodIdentityExceptionSpec&lt;/code>&lt;/em>&lt;/a>&lt;/td>
&lt;td>Describes the specifications of which pods are allowed to access IMDS without being intercepted by NMI.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="azurepodidentityexceptionspec">&lt;code>AzurePodIdentityExceptionSpec&lt;/code>&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>podLabels&lt;/code>&lt;br>&lt;em>map[string]string&lt;/em>&lt;/td>
&lt;td>Pods with matching labels will bypass NMI validation.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: Azure Identity Validation using Gatekeeper</title><link>https://azure.github.io/aad-pod-identity/docs/configure/azure_identity_validation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/configure/azure_identity_validation/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This will help validate various CRDs and the azure resources used in aad-pod-identity.
Currently validation of User assigned MSI format in Azure Identity is supported.&lt;/p>
&lt;p>&lt;a href="https://github.com/open-policy-agent/gatekeeper">Gatekeeper&lt;/a> - Policy Controller for Kubernetes, is used to validate the resources.&lt;/p>
&lt;ul>
&lt;li>It is a validating webhook that enforces CRD based policies&lt;/li>
&lt;li>Provides admission system which allows to configure policy and rule as constraint&lt;/li>
&lt;/ul>
&lt;h4 id="prerequisite-gatekeeper-installation">Prerequisite Gatekeeper Installation&lt;/h4>
&lt;p>Run the following to deploy a release version of Gatekeeper in your cluster or refer to &lt;a href="https://github.com/open-policy-agent/gatekeeper#installation-instructions">Gatekeeper Installation&lt;/a> for detailed instructions.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper/master/deploy/gatekeeper.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="azure-identity-format-validation">Azure Identity Format Validation&lt;/h2>
&lt;p>Policy can be configured as Gatekeeper constraint to ensure the validity of the Resource ID format in the given identity.Request will be rejected by admission controller in case of any violation of the configured constraint.&lt;/p>
&lt;p>Following are the two major resources to enable this check.&lt;/p>
&lt;ul>
&lt;li>Constraint Template&lt;/li>
&lt;li>Constraint&lt;/li>
&lt;/ul>
&lt;h3 id="constraint-template">Constraint Template&lt;/h3>
&lt;p>&lt;code>ConstraintTemplate&lt;/code> describes both the &lt;a href="https://www.openpolicyagent.org/docs/latest/policy-language/">Rego&lt;/a> that enforces the constraint and the schema of the constraint.&lt;/p>
&lt;ul>
&lt;li>User assigned MSI is expected to have Resource ID in the given format.&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>/subscriptions/&amp;lt;subid&amp;gt;/resourcegroups/&amp;lt;resourcegroup&amp;gt;/providers/Microsoft.ManagedIdentity/userAssignedIdentities/&amp;lt;name&amp;gt;
&lt;/code>&lt;/pre>&lt;p>The same can be validate using the following regex pattern. Resource ID that does not match this pattern is considered invalid.&lt;/p>
&lt;pre>&lt;code>(?i)/subscriptions/(.+?)/resourcegroups/(.+?)/providers/Microsoft.ManagedIdentity/(.+?)/(.+)
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Policy to ensure Resource ID is following expected pattern can be described via following Constraint template&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">templates.gatekeeper.sh/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ConstraintTemplate&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">azureidentityformat&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">crd&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">names&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">azureidentityformat&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">targets&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">target&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">admission.k8s.gatekeeper.sh&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">rego&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic">|
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> package azureidentityformat
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> violation[{&amp;#34;msg&amp;#34;: msg}] {
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> input.review.kind.kind == &amp;#34;AzureIdentity&amp;#34;
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> # format of resourceId is checked only for user-assigned MSI
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> input.review.object.spec.type == 0
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> resourceId := input.review.object.spec.resourceID
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> result := re_match(`(?i)/subscriptions/(.+?)/resourcegroups/(.+?)/providers/Microsoft.ManagedIdentity/(.+?)/(.+)`,resourceId)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> result == false
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> msg := sprintf(`The identity resourceId &amp;#39;%v&amp;#39; is invalid.It must be of the following format: &amp;#39;/subscriptions/&amp;lt;subid&amp;gt;/resourcegroups/&amp;lt;resourcegroup&amp;gt;/providers/Microsoft.ManagedIdentity/userAssignedIdentities/&amp;lt;name&amp;gt;&amp;#39;`,[resourceId])
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> }
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can install this ConstraintTemplate with the following command:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/validation/gatekeeper/azureidentityformat_template.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="constraint">Constraint&lt;/h3>
&lt;p>Constraint is used to inform Gatekeeper that the admin wants azureidentityformat ConstraintTemplate to be enforced.&lt;/p>
&lt;p>If the constraint is violated by any request on Kind &lt;code>AzureIdentity&lt;/code> in apiGroup &lt;code>aadpodidentity.k8s.io&lt;/code>, request will be rejected via the admission controller.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">constraints.gatekeeper.sh/v1beta1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">azureidentityformat&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">azureidentityformatconstraint&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">match&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kinds&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">apiGroups&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;aadpodidentity.k8s.io&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kinds&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;AzureIdentity&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can install this Constraint with the following command:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/validation/gatekeeper/azureidentityformat_constraint.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="examples">Examples&lt;/h3>
&lt;ul>
&lt;li>Following identity will pass the constraint and request will be accepted, as the resource ID is in the correct format.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;aadpodidentity.k8s.io/v1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">AzureIdentity&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">testidentityvalid&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resourceID&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/testidentity&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">clientID&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">00000000-0000-0000-0000-000000000000&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Following identity will violate the constraint and request will be rejected, as resource ID is not of correct format (&lt;code>resourcegroups/&amp;lt;resourcegroup&amp;gt;&lt;/code> is missing in resourceID).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;aadpodidentity.k8s.io/v1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">AzureIdentity&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">testidentityinvalid&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resourceID&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myidentity&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">clientID&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">00000000-0000-0000-0000-000000000000&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh"> kubectl apply -f aadpodidentity_test_invalid.yaml
Error from server &lt;span style="color:#ce5c00;font-weight:bold">([&lt;/span>denied by azureidentityformatconstraint&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> The identity resourceId &lt;span style="color:#4e9a06">&amp;#39;/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myidentity&amp;#39;&lt;/span> is invalid.It must be of the following format: &lt;span style="color:#4e9a06">&amp;#39;/subscriptions/&amp;lt;subid&amp;gt;/resourcegroups/&amp;lt;resourcegroup&amp;gt;/providers/Microsoft.ManagedIdentity/userAssignedIdentities/&amp;lt;name&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>: error when creating &lt;span style="color:#4e9a06">&amp;#34;aadpodidentity_test_invalid.yaml&amp;#34;&lt;/span>: admission webhook &lt;span style="color:#4e9a06">&amp;#34;validation.gatekeeper.sh&amp;#34;&lt;/span> denied the request: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>denied by azureidentityformatconstraint&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> The identity resourceId &lt;span style="color:#4e9a06">&amp;#39;/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myidentity&amp;#39;&lt;/span> is invalid.It must be of the following format: &lt;span style="color:#4e9a06">&amp;#39;/subscriptions/&amp;lt;subid&amp;gt;/resourcegroups/&amp;lt;resourcegroup&amp;gt;/providers/Microsoft.ManagedIdentity/userAssignedIdentities/&amp;lt;name&amp;gt;&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="uninstallation">Uninstallation&lt;/h3>
&lt;h4 id="uninstall-constraint-template--constraint">Uninstall Constraint Template &amp;amp; Constraint&lt;/h4>
&lt;ul>
&lt;li>Delete instances of the constraint resource&lt;/li>
&lt;li>Delete the ConstraintTemplate` resource&lt;/li>
&lt;/ul>
&lt;p>Run the following to uninstall / disable validation.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">kubectl delete -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/validation/gatekeeper/azureidentityformat_constraint.yaml
kubectl delete -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/validation/gatekeeper/azureidentityformat_template.yaml
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Feature Flags</title><link>https://azure.github.io/aad-pod-identity/docs/configure/feature_flags/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/configure/feature_flags/</guid><description>
&lt;h2 id="enable-scale-features-flag">Enable Scale Features flag&lt;/h2>
&lt;blockquote>
&lt;p>Available from 1.5.3 release
This flag is enabled by default starting from v1.8.1 release&lt;/p>
&lt;/blockquote>
&lt;p>AAD Pod Identity adds labels to &lt;code>AzureAssignedIdentities&lt;/code> which denote the nodename, podname and podnamespace.
When the optional parameter &lt;code>enableScaleFeatures&lt;/code> is set to &lt;code>true&lt;/code>, the NMI watches for &lt;code>AzureAssignedIdentities&lt;/code> will do a label based filtering on
the nodename label. This approach is taken because currently Kubernetes does not support field selectors in CRD watches. This reduces the load which
NMIs add on API server. When this flag is enabled, NMI will no longer work for &lt;code>AzureAssignedIdentities&lt;/code> which were created before 1.5.3-rc5, since
they don&amp;rsquo;t have the labels. Hence please note that this flag renders your setup incompatible with releases before 1.5.3-rc5.&lt;/p>
&lt;h2 id="batch-create-delete-flag">Batch Create Delete flag&lt;/h2>
&lt;blockquote>
&lt;p>Available from 1.5.3 release&lt;/p>
&lt;/blockquote>
&lt;p>MIC groups operations based on nodes/VMSS during the given cycle. With &lt;code>createDeleteBatch&lt;/code> parameter we can
tune the number of operations (CREATE/DELETE/UPDATE) to the API server which are performed in parallel in the context of a
node/VMSS.&lt;/p>
&lt;h2 id="client-qps-flag">Client QPS flag&lt;/h2>
&lt;blockquote>
&lt;p>Available from 1.5.3 release&lt;/p>
&lt;/blockquote>
&lt;p>Aad-pod-identity has a new flag clientQps which can be used to control the total number of client operations performed per second
to the API server by MIC.&lt;/p>
&lt;h2 id="block-instance-metadata-flag">Block Instance Metadata flag&lt;/h2>
&lt;p>The Azure Metadata API includes endpoints under &lt;code>/metadata/instance&lt;/code> which
provide information about the virtual machine. You can see examples of this
endpoint in &lt;a href="https://docs.microsoft.com/en-us/azure/virtual-machines/linux/instance-metadata-service#retrieving-all-metadata-for-an-instance">the Azure documentation&lt;/a>.&lt;/p>
&lt;p>Some of the information returned by this endpoint may be considered sensitive
or secret. The response includes information on the operating system and image,
tags, resource IDs, network, and VM custom data.&lt;/p>
&lt;p>This information is legitimately useful for many use cases, but also presents a
risk. If an attacker can exploit a vulnerability that allows them to read from
this endpoint, they may be able to access sensitive information even if the
vulnerable Pod does not use Managed Identity.&lt;/p>
&lt;p>The &lt;code>blockInstanceMetadata&lt;/code> flag for NMI will intercept any requests to this
endpoint from Pods which are not using host networking and return an HTTP 403
Forbidden response. This flag is disabled by default to maximize compatibility.
Users are encouraged to determine if this option is relevant and beneficial for
their use cases.&lt;/p>
&lt;h2 id="immutableusermsis-flag">ImmutableUserMSIs flag&lt;/h2>
&lt;blockquote>
&lt;p>Available from 1.5.4 release&lt;/p>
&lt;/blockquote>
&lt;p>Aad-pod-identity has a new flag &lt;code>immutable-user-msis&lt;/code> which can be used to prevent deletion of specified identities from VM/VMSS.
The list is comma separated. Example: 00000000-0000-0000-0000-000000000000,11111111-1111-1111-1111-111111111111&lt;/p>
&lt;h2 id="metadata-header-required-flag">Metadata header required flag&lt;/h2>
&lt;blockquote>
&lt;p>Available from 1.6.0 release&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>This flag is enabled by default starting from v1.8.4 release&lt;/p>
&lt;/blockquote>
&lt;p>When you query the Instance Metadata Service, you must provide the header &lt;code>Metadata: true&lt;/code> to ensure the request was not unintentionally redirected. You can see examples of this header in &lt;a href="https://docs.microsoft.com/en-us/azure/virtual-machines/linux/instance-metadata-service#using-headers">the Azure documentation&lt;/a>.&lt;/p>
&lt;p>This is critical especially when you &lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/how-to-use-vm-token#get-a-token-using-http">acquire an access token&lt;/a> as a mitigation against Server Side Request Forgery (SSRF) attack.&lt;/p>
&lt;p>The &lt;code>metadataHeaderRequired&lt;/code> flag for NMI will block all requests without Metadata header and return an HTTP 400 response. This flag is disabled by default for compatibility, but recommended for users to enable this feature.&lt;/p>
&lt;h2 id="set-retry-after-header-in-nmi-response">Set Retry-After header in NMI response&lt;/h2>
&lt;blockquote>
&lt;p>Available from v1.8.2 release&lt;/p>
&lt;/blockquote>
&lt;p>NMI currently has internal retries to handle delays in the identity assignment when the pod requests for a token. In case of clients that have shorter timeouts, the retries can be terminated and the client will not receive a token in the first attempt. This feature flag when enabled will set the &lt;code>Retry-After&lt;/code> header to 20s in the NMI response to the client and return a HTTP 503 response. The SDK used by the client will retry the request after 20s.&lt;/p>
&lt;h3 id="how-to-enable-this-feature">How to enable this feature&lt;/h3>
&lt;p>While enabling this feature, you must also disable the internal retries in NMI.&lt;/p>
&lt;ul>
&lt;li>If using the &lt;a href="../../getting-started/installation/#quick-install">yaml&lt;/a> to deploy aad-pod-identity, you can enable this feature by setting the &lt;code>--set-retry-after-header=true&lt;/code> flag in the NMI container.
&lt;ul>
&lt;li>Set &lt;code>--retry-attempts-for-created=1&lt;/code>, &lt;code>--retry-attempts-for-assigned=1&lt;/code> and &lt;code>--find-identity-retry-interval=1&lt;/code> flags in the NMI container to disable the internal retries in NMI.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>If using &lt;a href="../../getting-started/installation/#helm">helm&lt;/a> to deploy aad-pod-identity, you can enable this feature by setting &lt;code>nmi.setRetryAfterHeader=true&lt;/code> as part of helm install/upgrade.
&lt;ul>
&lt;li>Set &lt;code>nmi.retryAttemptsForCreated=1&lt;/code>, &lt;code>nmi.retryAttemptsForAssigned=1&lt;/code> and &lt;code>nmi.findIdentityRetryIntervalInSeconds=1&lt;/code> flags in the helm install/upgrade command to disable the internal retries in NMI.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="enable-deletion-of-conntrack-entries">Enable deletion of conntrack entries&lt;/h2>
&lt;blockquote>
&lt;p>Available from v1.8.7 release&lt;/p>
&lt;/blockquote>
&lt;p>NMI redirects Instance Metadata Service (IMDS) requests to itself by setting up iptables rules after it starts running on the node.
However, these rules are not applicable to pre-existing connections. In such a scenario, the token request will be directly sent to IMDS instead of being intercepted by NMI. What this means is that the workload pod that runs before the NMI pod on the node can access identities that it doesn&amp;rsquo;t have access to.
The &lt;code>enable-conntrack-deletion&lt;/code> flag enables deletion of entries for pre-existing connections to IMDS endpoint, this causes applications which had pre-existing connections to be intercepted by NMI.&lt;/p>
&lt;h3 id="how-to-enable-this-feature-1">How to enable this feature&lt;/h3>
&lt;ul>
&lt;li>If using the &lt;a href="../../getting-started/installation/#quick-install">yaml&lt;/a> to deploy aad-pod-identity, you can enable this feature by setting the &lt;code>--enable-conntrack-deletion=true&lt;/code> flag in the NMI container.&lt;/li>
&lt;li>If using &lt;a href="../../getting-started/installation/#helm">helm&lt;/a> to deploy aad-pod-identity, you can enable this feature by setting &lt;code>nmi.enableConntrackDeletion=true&lt;/code> as part of helm install/upgrade.&lt;/li>
&lt;/ul></description></item><item><title>Docs: Managed Identity Controller (MIC)</title><link>https://azure.github.io/aad-pod-identity/docs/concepts/mic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/concepts/mic/</guid><description>
&lt;p>Specifically, when a pod is scheduled, the MIC assigns the identity on Azure to the underlying VM/VMSS during the creation phase. When all pods using the identity are deleted, it removes the identity from the underlying VM/VMSS on Azure. The MIC takes similar actions when &lt;code>AzureIdentity&lt;/code> or &lt;code>AzureIdentityBinding&lt;/code> are created or deleted.&lt;/p></description></item><item><title>Docs: Node Managed Identity (NMI)</title><link>https://azure.github.io/aad-pod-identity/docs/concepts/nmi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/concepts/nmi/</guid><description>
&lt;p>The authorization request to fetch a Service Principal Token from an MSI endpoint is sent to Azure Instance Metadata Service (IMDS) endpoint (169.254.169.254), which is redirected to the NMI pod. The redirection is accomplished by adding iptable rules to redirect all non-host traffic with IMDS endpoint on port 80 as destination to the NMI endpoint. The NMI server identifies the pod based on the remote address of the request and then queries Kubernetes (through &lt;code>AzureAssignedIdentity&lt;/code>) for a matching Azure identity. NMI then makes an Azure Active Directory Authentication Library (&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/azuread-dev/active-directory-authentication-libraries">ADAL&lt;/a>) request to get the token for the client ID and returns it as a response. If the request had client ID as part of the query, it is validated against the admin-configured client ID.&lt;/p>
&lt;p>Here is an example cURL command that will fetch an access token to access ARM within a pod identified by an AAD-Pod-Identity selector:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">curl &lt;span style="color:#4e9a06">&amp;#39;http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01&amp;amp;resource=https%3A%2F%2Fmanagement.azure.com%2F&amp;#39;&lt;/span> -H Metadata:true -s
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For different ways to acquire an access token within a pod, please refer to this &lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/how-to-use-vm-token">documentation&lt;/a>.&lt;/p>
&lt;p>Similarly, a host can make an authorization request to fetch Service Principal Token for a resource directly from the NMI host endpoint (http://127.0.0.1:2579/host/token/). The request must include the pod namespace &lt;code>podns&lt;/code> and the pod name &lt;code>podname&lt;/code> in the request header and the resource endpoint of the resource requesting the token. The NMI server identifies the pod based on the &lt;code>podns&lt;/code> and &lt;code>podname&lt;/code> in the request header and then queries k8s (through &lt;code>AzureAssignedIdentity&lt;/code>) for a matching azure identity. Then NMI makes an ADAL request to get a token for the resource in the request, returning the &lt;code>token&lt;/code> and the &lt;code>clientid&lt;/code> as a response.&lt;/p>
&lt;p>Here is an example cURL command:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">curl http://127.0.0.1:2579/host/token/?resource&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>https://vault.azure.net -H &lt;span style="color:#4e9a06">&amp;#34;podname: nginx-flex-kv-int&amp;#34;&lt;/span> -H &lt;span style="color:#4e9a06">&amp;#34;podns: default&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For more information, please refer to the &lt;a href="../../design">design documentation&lt;/a>.&lt;/p></description></item><item><title>Docs: Pod Identity in Custom Cloud</title><link>https://azure.github.io/aad-pod-identity/docs/configure/custom_cloud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/configure/custom_cloud/</guid><description>
&lt;p>This document highlights the steps to configure and use AAD Pod Identity in custom Azure cloud environments.
If you are deploying with helm, then set &lt;code>mic.customCloud.enabled&lt;/code> to true (e.g., &lt;code>--set mic.customCloud.enabled=true&lt;/code>
on the command line) to have the following configuration changes rendered. The custom cloud environment file
name can be changed from &lt;code>/etc/kubernetes/akscustom.json&lt;/code> by setting &lt;code>mic.customCloud.configPath&lt;/code>.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Ensure the cloud name in &lt;code>/etc/kubernetes/azure.json&lt;/code> is set to &lt;code>AzureStackCloud&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;cloud&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;AzureStackCloud&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;tenantId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;xxxx&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;subscriptionId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;xxxx&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#a40000">...&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Mount the JSON file that contains the custom cloud environment details. The custom cloud environment file is stored in the file system of the Kubernetes node. The &lt;code>go-autorest&lt;/code> library is configured to &lt;a href="https://github.com/Azure/go-autorest/blob/autorest/v0.10.0/autorest/azure/environments.go#L219-L221">read the Azure environment from file&lt;/a> by default for &lt;code>AzureStackCloud&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>NOTE: In case of AKS clusters, the custom cloud environment file is &lt;code>/etc/kubernetes/akscustom.json&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>The file needs to be mounted only for the MIC pods.&lt;/p>
&lt;p>Add the custom environment file volume mount in MIC deployment:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">custom-env-file&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">mountPath&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/etc/kubernetes/akscustom.json&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">readOnly&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the custom environment file volume in MIC deployment:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">custom-env-file&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hostPath&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/etc/kubernetes/akscustom.json&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Set the &lt;code>AZURE_ENVIRONMENT_FILEPATH&lt;/code> environment variable as part of MIC deployment. This is used by &lt;code>go-autorest&lt;/code> to &lt;a href="https://github.com/Azure/go-autorest/blob/autorest/v0.10.0/autorest/azure/environments.go#L26-L28">read the custom cloud environment file&lt;/a>.&lt;/p>
&lt;p>Add the environment variable to MIC deployment:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">AZURE_ENVIRONMENT_FILEPATH&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">value&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/etc/kubernetes/akscustom.json&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>Docs: Migrating from Standard to Managed Mode</title><link>https://azure.github.io/aad-pod-identity/docs/configure/standard_to_managed_mode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/configure/standard_to_managed_mode/</guid><description>
&lt;blockquote>
&lt;p>Available from 1.6.0 release&lt;/p>
&lt;/blockquote>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>AAD Pod Identity supports 2 modes of operation (&lt;a href="https://azure.github.io/aad-pod-identity/docs/configure/pod_identity_in_managed_mode/">full explanation of both modes&lt;/a>):&lt;/p>
&lt;ol>
&lt;li>Standard Mode: In this mode, there is MIC and NMI components deployed to the cluster. MIC handles assigning/un-assigning the identity to the underlying VM/VMSS. NMI will intercept token request, validate if the pod has access to the identity it&amp;rsquo;s requesting a token for and fetch the token on behalf of the application.&lt;/li>
&lt;li>Managed Mode: In this mode, there is only NMI. The identity needs to be manually assigned and managed by the user. Refer to &lt;a href="../pod_identity_in_managed_mode">this doc&lt;/a> for more details on this mode.&lt;/li>
&lt;/ol>
&lt;h2 id="steps-to-migrate-aad-pod-identity-from-standard-to-managed-mode">Steps to migrate AAD Pod Identity from Standard to Managed mode&lt;/h2>
&lt;p>If you already have AAD Pod Identity setup with Standard mode and would like to migrate to Managed mode:&lt;/p>
&lt;blockquote>
&lt;p>NOTE: AAD Pod Identity in Managed Mode only works in namespaced mode. This means the &lt;code>AzureIdentity&lt;/code> and &lt;code>AzureIdentityBinding&lt;/code> needs to be in the same namespace as the application pod referencing it. This it to ensure RBAC best practices. If you&amp;rsquo;re running in non-namespace mode, move the &lt;code>AzureIdentity&lt;/code> and &lt;code>AzureIdentityBinding&lt;/code> to the correct namespaces before proceeding with the steps.&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>
&lt;p>Assign the pod identities to the VM/VMSS:&lt;/p>
&lt;p>To assign the identity to the VM, run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">az vm identity assign -g &amp;lt;VM resource group name&amp;gt; -n &amp;lt;VM name&amp;gt; --identities &amp;lt;resource ID of managed identity&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To assign the identity to VMSS, run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">az vmss identity assign -g &amp;lt;VM resource group name&amp;gt; -n &amp;lt;VMSS name&amp;gt; --identities &amp;lt;resource ID of managed identity&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Delete the MIC deployment and NMI daemonset&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">kubectl delete deploy &amp;lt;mic deployment name&amp;gt; -n &amp;lt;namespace&amp;gt;
kubectl delete daemonset &amp;lt;nmi daemonset name&amp;gt; -n &amp;lt;namespace&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Delete the MIC service accounts and cluster-role&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">kubectl delete sa aad-pod-id-mic-service-account -n &amp;lt;namespace&amp;gt;
kubectl delete clusterrole aad-pod-id-mic-role
kubectl delete clusterrolebinding aad-pod-id-mic-binding
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Delete AzureAssignedIdentity custom resource definition&lt;/p>
&lt;p>The &lt;code>AzureAssignedIdentity&lt;/code> is created and managed by MIC in standard mode. This is not required for managed mode.&lt;/p>
&lt;p>Refer to &lt;a href="../../troubleshooting/#unable-to-remove-azureassignedidentity-after-mic-pods-are-deleted">this doc&lt;/a> on how to delete the &lt;code>AzureAssignedIdentities&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Install AAD Pod Identity in managed mode&lt;/p>
&lt;p>Refer to &lt;a href="../pod_identity_in_managed_mode">this doc&lt;/a> on how install AAD Pod Identity in managed mode.&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Docs: Pod Identity in Managed Mode</title><link>https://azure.github.io/aad-pod-identity/docs/configure/pod_identity_in_managed_mode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/configure/pod_identity_in_managed_mode/</guid><description>
&lt;blockquote>
&lt;p>Available from 1.6.0 release&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>NOTE: The AKS pod-managed identities add-on installs AAD Pod Identity in Managed mode.&lt;/p>
&lt;/blockquote>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Starting from 1.6.0 release, 2 modes of operation are supported for pod-identity&lt;/p>
&lt;ul>
&lt;li>Standard Mode&lt;/li>
&lt;li>Managed Mode&lt;/li>
&lt;/ul>
&lt;h3 id="standard-mode">Standard Mode&lt;/h3>
&lt;p>This is the default mode in which pod-identity will be deployed. In this mode, there are 2 components, MIC (Managed Identity Controller) and NMI (Node Managed Identity). MIC handles the identity assignment/removal from the underlying vm/vmss when new pods using the identity are created/deleted.&lt;/p>
&lt;h3 id="managed-mode">Managed Mode&lt;/h3>
&lt;p>In this mode, there is only the NMI component deployed in the cluster. The identity assignment needs to be manually performed.&lt;/p>
&lt;p>Deploy &lt;code>aad-pod-identity&lt;/code> components to an RBAC-enabled cluster in managed mode:&lt;/p>
&lt;ul>
&lt;li>This installs NMI in managed mode in the kube-system namespace&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/deploy/infra/managed-mode-deployment.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>NOTE&lt;/strong> Managed mode is only supported in namespaced mode. This ensures pods in namespace are only matched with &lt;code>AzureIdentity&lt;/code> and &lt;code>AzureIdentityBinding&lt;/code> in the same namespace.&lt;/p>
&lt;h4 id="helm">Helm&lt;/h4>
&lt;p>AAD Pod Identity allows users to customize their installation via Helm.&lt;/p>
&lt;pre>&lt;code>helm repo add aad-pod-identity https://raw.githubusercontent.com/Azure/aad-pod-identity/master/charts
helm install aad-pod-identity aad-pod-identity/aad-pod-identity --set operationMode=managed
&lt;/code>&lt;/pre>&lt;h5 id="values">Values&lt;/h5>
&lt;p>For a list of customizable values that can be injected when invoking &lt;code>helm install&lt;/code>, please see the &lt;a href="https://github.com/Azure/aad-pod-identity/tree/master/charts/aad-pod-identity#configuration">Helm chart configurations&lt;/a>.&lt;/p>
&lt;p>To assign the identity to the VM, run the following command -&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">az vm identity assign -g &amp;lt;VM resource group name&amp;gt; -n &amp;lt;VM name&amp;gt; --identities &amp;lt;resource ID of managed identity&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To assign the identity to VMSS, run the following command -&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">az vmss identity assign -g &amp;lt;VM resource group name&amp;gt; -n &amp;lt;VMSS name&amp;gt; --identities &amp;lt;resource ID of managed identity&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="why-use-managed-mode">Why use Managed mode&lt;/h2>
&lt;ul>
&lt;li>Identity assignment on VM takes 10-20s and 40-60s in case of VMSS. In case of cronjobs or applications that require access to the identity and can&amp;rsquo;t tolerate the assignment delay, it&amp;rsquo;s best to use managed mode as the identity is manually pre-assigned to the VM/VMSS.&lt;/li>
&lt;li>In standard mode, MIC requires write permissions on VM/VMSS and Managed Identity Operator permission on all user assigned MSIs. While running in managed mode, since there is no MIC, the role assignments are not required.&lt;/li>
&lt;/ul></description></item><item><title>Docs: Block Diagram and Design</title><link>https://azure.github.io/aad-pod-identity/docs/concepts/block-diagram-and-design/</link><pubDate>Tue, 03 Nov 2020 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/concepts/block-diagram-and-design/</guid><description>
&lt;p>&lt;img src="../block-diagram.png" alt="Block Diagram">&lt;/p>
&lt;h2 id="aad-and-kubernetes">AAD and Kubernetes&lt;/h2>
&lt;p>The relationship between kubernetes and AAD is covered in three main areas:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Cluster Identity&lt;/strong>: The identity used by the cloud provider running in various kubernetes components to perform operations against Azure, typically against Azure&amp;rsquo;s resource group where the cluster lives. This identity is set during the cluster bring up process. This is not included in the scope of this proposal.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>User Identity&lt;/strong>: What enables user/operator to authenticate against AAD using AAD before using &lt;code>kubectl&lt;/code> commands. This is not included in the scope of this proposal.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Application Identities&lt;/strong>: Identities that are used by applications running on kubernetes to access any resources that uses AAD as identity provider. These resources can be ARM, Applications running on the same cluster, on azure, or anywhere else. Managing, assigning these identities is the scope of this document.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>This proposal does not cover how application can be configured to use AAD as identity/authentication provider.&lt;/p>
&lt;/blockquote>
&lt;h2 id="use-cases">Use cases&lt;/h2>
&lt;ol>
&lt;li>Kubernetes applications depending on other applications that use AAD as an identity provider. These applications include Azure first party services such as ARM, Azure SQL, and Azure KeyVault.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Azure 1st party services are all moving to use AAD as the primary identity provider.&lt;/p>
&lt;/blockquote>
&lt;ol start="2">
&lt;li>
&lt;p>Delegating authorization to tools such as AAD group memberships.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Enable identity rotation without application interruption.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Example: rotating a service principal password/cert without having to edit secrets assigned directly to applications.&lt;/p>
&lt;/blockquote>
&lt;ol start="4">
&lt;li>Provide a framework to enable time-boxed identity assignment. Manually triggered or automated. The same framework can be used for (jit sudo style access with automation tools).&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Example: a front end application can have access to centralized data store between midnight and 1 AM during business days only.&lt;/p>
&lt;/blockquote>
&lt;h2 id="guiding-principles">Guiding Principles&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Favor little to no change to how users currently write applications against various editions of &lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-authentication-libraries">ADAL&lt;/a>. Favor committing changes to SDKs and don&amp;rsquo;t ask users to change applications that are written for Kubernetes.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Favor little to no change in the way users create kubernetes application specs (favor declarative approach). This enables users to focus their development and debugging experience in code they wrote, not code imposed on them.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Example: favor annotation and labels over side-cars (even dynamically injected).&lt;/p>
&lt;/blockquote>
&lt;ol start="3">
&lt;li>Separate identities from &lt;code>identity assignment&lt;/code> applications enables users to swap identities used by the applications.&lt;/li>
&lt;/ol>
&lt;h2 id="processes">Processes&lt;/h2>
&lt;h3 id="aad-identity-management-and-assignment-within-cluster">AAD Identity Management and Assignment (within cluster)&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Cluster operators create instances of &lt;code>crd:azureIdentity&lt;/code>. Each instance is a kubernetes object representing Azure AAD identity that can be EMSI or service principal (with password).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Cluster operators create instances of &lt;code>crd:azureIdentityBinding&lt;/code>. Each instance represents binding between &lt;code>pod&lt;/code> and &lt;code>crd:azureIdentity&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A Controller will run to create &lt;code>crd:azureAssignedIdentity&lt;/code> based on &lt;code>crd:azureIdentityBinding&lt;/code> linking &lt;code>pod&lt;/code> with &lt;code>crd:azureIdentity&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="acquiring-tokens">Acquiring Tokens&lt;/h3>
&lt;blockquote>
&lt;p>for reference please read &lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/managed-service-identity/how-to-use-vm-token">Azure VM Managed Service Identity (MSI)&lt;/a> and &lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/howto-assign-access-portal">Assign a Managed Service Identity&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>
&lt;p>Kubernetes applications (pods) will default to use MSI endpoint.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>All traffic to MSI endpoint is routed via &lt;code>iptables&lt;/code> to a daemon-set that will use &lt;code>sourceIp&lt;/code> to identify pod, then find an appropriate &lt;code>crd:azureIdentityBinding&lt;/code>. The daemon-set mimics all the REST API offered by MSI endpoint. All tokens are presented to pods on MSI endpoint irrespective of the identity used to back this request (EMSI or service principal).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>All token issuance will be logged as events attached to &lt;code>crd:azureIdentityBinding&lt;/code> for audit purposes.&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Docs: Monitoring Pod Identity with Prometheus</title><link>https://azure.github.io/aad-pod-identity/docs/configure/prometheus_monitoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/configure/prometheus_monitoring/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>AAD pod identity is a foundational service that other applications depend upon, it is recommended to monitor the same.&lt;/p>
&lt;p>Liveliness probe and Prometheus metrics are available in both Managed Identity Controller (MIC) and the Node Managed Identity (NMI) components.&lt;/p>
&lt;h2 id="liveliness-probe">Liveliness Probe&lt;/h2>
&lt;p>MIC and NMI exposes /healthz endpoint with content of &amp;ldquo;Active/Not Active&amp;rdquo; state.
State &amp;ldquo;Active&amp;rdquo; is being returned if the component has started successfully and &amp;ldquo;Not Active&amp;rdquo; otherwise.&lt;/p>
&lt;h2 id="prometheus-metrics">Prometheus Metrics&lt;/h2>
&lt;p>&lt;a href="https://github.com/prometheus/prometheus">Prometheus&lt;/a> is a systems and service monitoring system. It collects metrics from configured targets at given intervals, evaluates rule expressions,displays the results, and can trigger alerts if some condition is observed to be true.&lt;/p>
&lt;p>The following &lt;a href="https://opencensus.io/">OpenCensus&lt;/a> metrics are exposed in AAD pod identity system via prometheus exporter.&lt;/p>
&lt;p>&lt;strong>1. aadpodidentity_assigned_identity_addition_duration_seconds&lt;/strong>&lt;/p>
&lt;p>Histogram that tracks the duration (in seconds) it takes for Assigned identity addition operations.&lt;/p>
&lt;p>&lt;strong>2. aadpodidentity_assigned_identity_addition_count&lt;/strong>&lt;/p>
&lt;p>Counter that tracks the cumulative number of assigned identity addition operations.&lt;/p>
&lt;p>&lt;strong>3. aadpodidentity_assigned_identity_deletion_duration_seconds&lt;/strong>&lt;/p>
&lt;p>Histogram that tracks the duration (in seconds) it takes for Assigned identity deletion operations.&lt;/p>
&lt;p>&lt;strong>4. aadpodidentity_assigned_identity_deletion_count&lt;/strong>&lt;/p>
&lt;p>Counter that tracks the cumulative number of assigned identity deletion operations.&lt;/p>
&lt;p>&lt;strong>5. aadpodidentity_nmi_operations_duration_seconds&lt;/strong>&lt;/p>
&lt;p>Histogram that tracks the latency (in seconds) of NMI operations to complete. Broken down by operation type, status code.&lt;/p>
&lt;p>&lt;strong>6. aadpodidentity_mic_cycle_duration_seconds&lt;/strong>&lt;/p>
&lt;p>Histogram that tracks the duration (in seconds) it takes for a single cycle in MIC.&lt;/p>
&lt;p>&lt;strong>7. aadpodidentity_mic_cycle_count&lt;/strong>&lt;/p>
&lt;p>Counter that tracks the number of cycles executed in MIC.&lt;/p>
&lt;p>&lt;strong>8. aadpodidentity_mic_new_leader_election_count&lt;/strong>&lt;/p>
&lt;p>Counter that tracks the cumulative number of new leader election in MIC.&lt;/p>
&lt;p>&lt;strong>9. aadpodidentity_cloud_provider_operations_errors_count&lt;/strong>&lt;/p>
&lt;p>Counter that tracks the cumulative number of cloud provider operations errors. Broken down by operation type.&lt;/p>
&lt;p>&lt;strong>10. aadpodidentity_cloud_provider_operations_duration_seconds&lt;/strong>&lt;/p>
&lt;p>Histogram that tracks the duration (in seconds) it takes for cloud provider operations. Broken down by operation type.&lt;/p>
&lt;p>&lt;strong>11. aadpodidentity_kubernetes_api_operations_errors_count&lt;/strong>&lt;/p>
&lt;p>Counter that tracks the cumulative number of kubernetes api operations errors. Broken down by operation type.&lt;/p>
&lt;p>&lt;strong>12. aadpodidentity_imds_operations_errors_count&lt;/strong>&lt;/p>
&lt;p>Counter that tracks the cumulative number of imds token operation errors. Broken down by operation type.&lt;/p>
&lt;p>&lt;strong>13. aadpodidentity_imds_operations_duration_seconds&lt;/strong>&lt;/p>
&lt;p>Histogram that tracks the duration (in seconds) it takes for IMDS token operations. Broken down by operation type.&lt;/p>
&lt;h3 id="prometheus-metrics-endpoints">Prometheus Metrics Endpoints&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">Component&lt;/th>
&lt;th>Default Metric Port&lt;/th>
&lt;th>Metric Path&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">&lt;code>NMI&lt;/code>&lt;/td>
&lt;td>&lt;code>9090&lt;/code>&lt;/td>
&lt;td>&lt;code>/metrics&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;code>MIC&lt;/code>&lt;/td>
&lt;td>&lt;code>8888&lt;/code>&lt;/td>
&lt;td>&lt;code>/metrics&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: Enable PSP Clusters</title><link>https://azure.github.io/aad-pod-identity/docs/configure/enable_psp_enabled_clusters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/configure/enable_psp_enabled_clusters/</guid><description>
&lt;h2 id="policy-to-allow-aad-pod-identity-to-work-in-psp-enabled-clusters">Policy to allow aad-pod-identity to work in PSP enabled clusters&lt;/h2>
&lt;p>The NMI component of aad-pod-identity runs on &lt;code>hostNetwork&lt;/code> and in &lt;code>privileged&lt;/code> mode. If the cluster has Pod Security Policies (PSP) enabled that block &lt;code>hostNetwork&lt;/code> and &lt;code>privileged&lt;/code> mode, then the aad-pod-identity will be unable to run. The following step will create a PSP that allows the required access for aad-pod-identity components only in the desired namespace -&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/examples/psp-podidentity.yaml
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>