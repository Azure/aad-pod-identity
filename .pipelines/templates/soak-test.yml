parameters:
  - name: clusterConfigs
    type: object

jobs:
  - ${{ each clusterConfig in parameters.clusterConfigs }}:
    - job:
      displayName: ${{ format('soak/{0}', clusterConfig) }}
      dependsOn: unit_test
      timeoutInMinutes: 120
      cancelTimeoutInMinutes: 5
      workspace:
        clean: all
      variables:
        - group: aad-pod-identity
        - group: ${{ format('{0}', clusterConfig) }}
        - name: CLUSTER_CONFIG
          value: ${{ format('{0}', clusterConfig) }}
        - name: IS_SOAK_TEST
          value: "true"
      steps:
        - template: az-login.yml

        - template: install-helm.yml

        - ${{ if eq(clusterConfig, 'pi-aks-e2e-daily') }}:
          - script: |
              az aks get-credentials \
                --resource-group $(CLUSTER_CONFIG) \
                --name $(CLUSTER_CONFIG)
            displayName: "Set KUBECONFIG"

        - ${{ if not(eq(clusterConfig, 'pi-aks-e2e-daily')) }}:
          - task: DownloadSecureFile@1
            name: kubeconfig
            inputs:
              secureFile: ${{ format('{0}', clusterConfig) }}
            displayName: "Download KUBECONFIG"

          - script: |
              export KUBECONFIG=$(kubeconfig.secureFilePath)
              echo "##vso[task.setvariable variable=KUBECONFIG]${KUBECONFIG}"
            displayName: "Set KUBECONFIG"

        - script: |
            kubectl wait --for=condition=ready node --all
            kubectl wait pod -n kube-system --for=condition=Ready --all
            kubectl get nodes -owide
            kubectl cluster-info
          displayName: "Check cluster's health"

        - script: |
            export REGISTRY="${REGISTRY:-$(REGISTRY_NAME).azurecr.io/k8s/aad-pod-identity}"
            export MIC_VERSION="${IMAGE_VERSION}"
            export NMI_VERSION="${IMAGE_VERSION}"
            export IDENTITY_VALIDATOR_VERSION="${IMAGE_VERSION}"
            make e2e
          env:
            # used by one of the test cases
            SERVICE_PRINCIPAL_CLIENT_ID: $(SERVICE_PRINCIPAL_CLIENT_ID)
            SERVICE_PRINCIPAL_CLIENT_SECRET: $(SERVICE_PRINCIPAL_CLIENT_SECRET)
          displayName: "Run E2E tests"
