steps:
  - script: |
      az group create -n ${RESOURCE_GROUP} -l $(LOCATION) > /dev/null

      if [[ ${LARGE_CLUSTER:-} == "true" ]]; then
        az aks create \
          --enable-managed-identity \
          --resource-group ${RESOURCE_GROUP} \
          --name ${RESOURCE_GROUP} \
          --node-count $(AGENT_COUNT) \
          --nodepool-name nodepool1 \
          --node-vm-size Standard_DS2_v2 \
          --location ${LOCATION} \
          --no-ssh-key \
          --load-balancer-sku standard \
          --network-plugin azure \
          --max-pods ${MAX_PODS} \
          --load-balancer-managed-outbound-ip-count 6

          MASTERIP=$(az aks show \
            -g ${RESOURCE_GROUP} \
            -n ${RESOURCE_GROUP} \
            --query 'fqdn' -o tsv)
          echo "##vso[task.setvariable variable=MASTERIP]${MASTERIP}"
          echo "##vso[task.setvariable variable=MASTERINTERNALIP]${MASTERIP}"
      else
        az aks create \
          --enable-managed-identity \
          --resource-group ${RESOURCE_GROUP} \
          --name ${RESOURCE_GROUP} \
          --max-pods ${MAX_PODS} \
          --network-plugin azure \
          --generate-ssh-keys > /dev/null
      fi

      # store kubeconfig to ~/.kube/config
      az aks get-credentials \
        --resource-group ${RESOURCE_GROUP} \
        --name ${RESOURCE_GROUP}

      # set NODE_RESOURCE_GROUP for e2e test config
      NODE_RESOURCE_GROUP="$(az aks show -g ${RESOURCE_GROUP} -n ${RESOURCE_GROUP} --query nodeResourceGroup -otsv)"
      echo "##vso[task.setvariable variable=NODE_RESOURCE_GROUP]${NODE_RESOURCE_GROUP}"
    displayName: "Deploy an AKS cluster "
