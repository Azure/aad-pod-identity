parameters:
  - name: clusterConfigs
    type: object

jobs:
  - ${{ each clusterConfig in parameters.clusterConfigs }}:
    - job:
      displayName: ${{ format('soak/{0}', clusterConfig) }}
      dependsOn: unit_tests
      timeoutInMinutes: 120
      cancelTimeoutInMinutes: 5
      workspace:
        clean: all
      variables:
        - group: aad-pod-identity
        - group: ${{ format('{0}', clusterConfig) }}
        - name: CLUSTER_CONFIG
          value: ${{ format('{0}', clusterConfig) }}
        - name: IS_SOAK_TEST
          value: "true"
      steps:
        - task: GoTool@0
          inputs:
            version: '1.15.0'

        - script: |
            echo "Installing kubectl..."
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
          displayName: "Install tools"

        - ${{ if eq(clusterConfig, 'pi-aks-e2e-daily') }}:
          - script: |
              az login \
                --service-principal \
                -u=$(AZURE_CLIENT_ID) \
                -p=$(AZURE_CLIENT_SECRET) \
                -t=$(AZURE_TENANT_ID) > /dev/null
              az account set -s=$(SUBSCRIPTION_ID)

              az aks get-credentials \
                --resource-group $(CLUSTER_CONFIG) \
                --name $(CLUSTER_CONFIG)
            displayName: "Set KUBECONFIG"

        - ${{ if not(eq(clusterConfig, 'pi-aks-e2e-daily')) }}:
          - task: DownloadSecureFile@1
            name: kubeconfig
            inputs:
              secureFile: ${{ format('{0}', clusterConfig) }}
            displayName: "Download KUBECONFIG"

          - script: |
              export KUBECONFIG=$(kubeconfig.secureFilePath)
              echo "##vso[task.setvariable variable=KUBECONFIG]${KUBECONFIG}"
            displayName: "Set KUBECONFIG"

        - script: |
            kubectl wait --for=condition=ready node --all
            kubectl wait pod -n kube-system --for=condition=Ready --all
            kubectl get nodes -owide
            kubectl cluster-info
          displayName: "Check cluster's health"

        - script: |
            if [[ -n "${IMAGE_VERSION:-}" ]]; then
              echo "Image version: ${IMAGE_VERSION}"
              export MIC_VERSION="${IMAGE_VERSION}"
              export NMI_VERSION="${IMAGE_VERSION}"
              export IDENTITY_VALIDATOR_VERSION="${IMAGE_VERSION}"
            fi
            export REGISTRY="${REGISTRY:-$(REGISTRY_NAME).azurecr.io/k8s/aad-pod-identity}"
            make e2e
          env:
            SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
            AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
            AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
            AZURE_TENANT_ID: $(AZURE_TENANT_ID)
          displayName: "Run E2E tests"
