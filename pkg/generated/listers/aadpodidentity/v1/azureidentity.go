/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/Azure/aad-pod-identity/pkg/apis/aadpodidentity/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AzureIdentityLister helps list AzureIdentities.
type AzureIdentityLister interface {
	// List lists all AzureIdentities in the indexer.
	List(selector labels.Selector) (ret []*v1.AzureIdentity, err error)
	// AzureIdentities returns an object that can list and get AzureIdentities.
	AzureIdentities(namespace string) AzureIdentityNamespaceLister
	AzureIdentityListerExpansion
}

// azureIdentityLister implements the AzureIdentityLister interface.
type azureIdentityLister struct {
	indexer cache.Indexer
}

// NewAzureIdentityLister returns a new AzureIdentityLister.
func NewAzureIdentityLister(indexer cache.Indexer) AzureIdentityLister {
	return &azureIdentityLister{indexer: indexer}
}

// List lists all AzureIdentities in the indexer.
func (s *azureIdentityLister) List(selector labels.Selector) (ret []*v1.AzureIdentity, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AzureIdentity))
	})
	return ret, err
}

// AzureIdentities returns an object that can list and get AzureIdentities.
func (s *azureIdentityLister) AzureIdentities(namespace string) AzureIdentityNamespaceLister {
	return azureIdentityNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AzureIdentityNamespaceLister helps list and get AzureIdentities.
type AzureIdentityNamespaceLister interface {
	// List lists all AzureIdentities in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AzureIdentity, err error)
	// Get retrieves the AzureIdentity from the indexer for a given namespace and name.
	Get(name string) (*v1.AzureIdentity, error)
	AzureIdentityNamespaceListerExpansion
}

// azureIdentityNamespaceLister implements the AzureIdentityNamespaceLister
// interface.
type azureIdentityNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AzureIdentities in the indexer for a given namespace.
func (s azureIdentityNamespaceLister) List(selector labels.Selector) (ret []*v1.AzureIdentity, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AzureIdentity))
	})
	return ret, err
}

// Get retrieves the AzureIdentity from the indexer for a given namespace and name.
func (s azureIdentityNamespaceLister) Get(name string) (*v1.AzureIdentity, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("azureidentity"), name)
	}
	return obj.(*v1.AzureIdentity), nil
}
