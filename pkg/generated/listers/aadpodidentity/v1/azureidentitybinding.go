/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/Azure/aad-pod-identity/pkg/apis/aadpodidentity/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AzureIdentityBindingLister helps list AzureIdentityBindings.
type AzureIdentityBindingLister interface {
	// List lists all AzureIdentityBindings in the indexer.
	List(selector labels.Selector) (ret []*v1.AzureIdentityBinding, err error)
	// AzureIdentityBindings returns an object that can list and get AzureIdentityBindings.
	AzureIdentityBindings(namespace string) AzureIdentityBindingNamespaceLister
	AzureIdentityBindingListerExpansion
}

// azureIdentityBindingLister implements the AzureIdentityBindingLister interface.
type azureIdentityBindingLister struct {
	indexer cache.Indexer
}

// NewAzureIdentityBindingLister returns a new AzureIdentityBindingLister.
func NewAzureIdentityBindingLister(indexer cache.Indexer) AzureIdentityBindingLister {
	return &azureIdentityBindingLister{indexer: indexer}
}

// List lists all AzureIdentityBindings in the indexer.
func (s *azureIdentityBindingLister) List(selector labels.Selector) (ret []*v1.AzureIdentityBinding, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AzureIdentityBinding))
	})
	return ret, err
}

// AzureIdentityBindings returns an object that can list and get AzureIdentityBindings.
func (s *azureIdentityBindingLister) AzureIdentityBindings(namespace string) AzureIdentityBindingNamespaceLister {
	return azureIdentityBindingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AzureIdentityBindingNamespaceLister helps list and get AzureIdentityBindings.
type AzureIdentityBindingNamespaceLister interface {
	// List lists all AzureIdentityBindings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AzureIdentityBinding, err error)
	// Get retrieves the AzureIdentityBinding from the indexer for a given namespace and name.
	Get(name string) (*v1.AzureIdentityBinding, error)
	AzureIdentityBindingNamespaceListerExpansion
}

// azureIdentityBindingNamespaceLister implements the AzureIdentityBindingNamespaceLister
// interface.
type azureIdentityBindingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AzureIdentityBindings in the indexer for a given namespace.
func (s azureIdentityBindingNamespaceLister) List(selector labels.Selector) (ret []*v1.AzureIdentityBinding, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AzureIdentityBinding))
	})
	return ret, err
}

// Get retrieves the AzureIdentityBinding from the indexer for a given namespace and name.
func (s azureIdentityBindingNamespaceLister) Get(name string) (*v1.AzureIdentityBinding, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("azureidentitybinding"), name)
	}
	return obj.(*v1.AzureIdentityBinding), nil
}
