apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "aad-pod-identity.nmi.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "aad-pod-identity.labels" . | nindent 4 }}
    app.kubernetes.io/component: nmi
    tier: node
  annotations:
    description: {{ .Chart.Description }}
spec:
  selector:
    matchLabels:
      {{- include "aad-pod-identity.selectors" . | nindent 6 }}
      app.kubernetes.io/component: nmi
  template:
    metadata:
      labels:
        {{- include "aad-pod-identity.labels" . | nindent 8 }}
        app.kubernetes.io/component: nmi
        tier: node
      {{- if .Values.nmi.podLabels }}
      {{- toYaml .Values.nmi.podLabels | nindent 8 }}
      {{- end }}
{{- if .Values.nmi.podAnnotations }}
      annotations:
{{ toYaml .Values.nmi.podAnnotations | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      {{- if .Values.rbac.enabled }}
      serviceAccountName: {{ template "aad-pod-identity.nmi.fullname" . }}
      {{- end }}
      {{- if .Values.nmi.priorityClassName }}
      priorityClassName: {{ .Values.nmi.priorityClassName | quote }}
      {{- end }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      volumes:
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: iptableslock
      {{- if semverCompare ">= 1.7.0-0" .Values.nmi.tag }}
      - name: kubelet-config
        hostPath:
          path: {{ .Values.nmi.kubeletConfig }}
          type: FileOrCreate
      {{- end }}
      containers:
      - name: nmi
        image: "{{ .Values.image.repository }}/{{ .Values.nmi.image }}:{{ .Values.nmi.tag }}"
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        args:
          {{- if semverCompare "<= 1.6.1-0" .Values.nmi.tag }}
          - "--host-ip=$(HOST_IP)"
          {{- end }}
          - "--node=$(NODE_NAME)"
          {{- if .Values.nmi.probePort }}
          - --http-probe-port={{ .Values.nmi.probePort }}
          {{- end }}
          {{- if .Values.nmi.ipTableUpdateTimeIntervalInSeconds }}
          - --ipt-update-interval-sec={{ .Values.nmi.ipTableUpdateTimeIntervalInSeconds }}
          {{- end }}
          {{- if .Values.nmi.micNamespace }}
          - --MICNamespace={{ .Values.nmi.micNamespace }}
          {{- end }}
          {{- if .Values.nmi.retryAttemptsForCreated }}
          - --retry-attempts-for-created={{ .Values.nmi.retryAttemptsForCreated }}
          {{- end }}
          {{- if .Values.nmi.retryAttemptsForAssigned }}
          - --retry-attempts-for-assigned={{ .Values.nmi.retryAttemptsForAssigned }}
          {{- end }}
          {{- if .Values.nmi.findIdentityRetryIntervalInSeconds }}
          - --find-identity-retry-interval={{ .Values.nmi.findIdentityRetryIntervalInSeconds }}
          {{- end }}
          {{- if .Values.nmi.enableScaleFeatures }}
          - --enableScaleFeatures={{ .Values.nmi.enableScaleFeatures }}
          {{- end }}
          {{- if .Values.nmi.prometheusPort }}
          - --prometheus-port={{ .Values.nmi.prometheusPort }}
          {{- end }}
          {{- if .Values.nmi.blockInstanceMetadata }}
          - --block-instance-metadata={{ .Values.nmi.blockInstanceMetadata }}
          {{- end }}
          {{- if .Values.nmi.metadataHeaderRequired}}
          - --metadata-header-required={{ .Values.nmi.metadataHeaderRequired }}
          {{- end }}
          {{- if .Values.nmi.loggingFormat }}
          - --log-format={{ .Values.nmi.loggingFormat }}
          {{- end}}
          {{- if .Values.nmi.logVerbosity }}
          - -v={{ .Values.nmi.logVerbosity }}
          {{- end }}
          {{- if semverCompare ">= 1.6.0-0" .Values.nmi.tag }}
          - --operation-mode={{ .Values.operationMode }}
          {{- end}}
          {{- if eq .Values.operationMode "managed" }}
          - --forceNamespaced
          {{- end }}
          {{- if .Values.nmi.allowNetworkPluginKubenet }}
          - --allow-network-plugin-kubenet={{ .Values.nmi.allowNetworkPluginKubenet }}
          {{- end }}
          {{- if semverCompare ">= 1.7.0-0" .Values.nmi.tag }}
          - --kubelet-config={{ .Values.nmi.kubeletConfig }}
          {{- end }}
          {{- if .Values.customUserAgent }}
          - --custom-user-agent={{ .Values.customUserAgent }}
          {{- end }}
          {{- if .Values.nmi.setRetryAfterHeader }}
          - --set-retry-after-header={{ .Values.nmi.setRetryAfterHeader }}
          {{- end }}
        env:
          {{- if semverCompare "<= 1.6.1-0" .Values.nmi.tag }}
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          {{- end }}
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          {{- if eq .Values.operationMode "standard" }}
          - name: FORCENAMESPACED
            value: "{{ .Values.forceNamespaced }}"
          {{- end }}
        {{- if .Values.nmi.prometheusPort }}
        ports:
          - containerPort: {{ .Values.nmi.prometheusPort }}
            name: metrics
            protocol: TCP
        {{- end }}
        securityContext:
          runAsUser: 0
          capabilities:
            drop:
            - ALL
            add:
            - DAC_READ_SEARCH
            - NET_ADMIN
            - NET_RAW
        volumeMounts:
        - mountPath: /run/xtables.lock
          name: iptableslock
        {{- if semverCompare ">= 1.7.0-0" .Values.nmi.tag }}
        - name: kubelet-config
          mountPath: {{ .Values.nmi.kubeletConfig }}
          readOnly: true
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            {{- if .Values.nmi.probePort }}
            port: {{ .Values.nmi.probePort }}
            {{- else }}
            port: 8080
            {{- end }}
          initialDelaySeconds: 10
          periodSeconds: 5
{{- with .Values.nmi.resources }}
        resources:
{{ toYaml . | indent 12 }}
{{- end }}
{{- with .Values.nmi.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.nmi.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.nmi.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
