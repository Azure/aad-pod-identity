apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "aad-pod-identity.mic.fullname" . }}
  labels:
    {{- include "aad-pod-identity.labels" . | nindent 4 }}
    app.kubernetes.io/component: mic
  annotations:
    description: {{ .Chart.Description }}
spec:
  replicas: 2
  selector:
    matchLabels:
      {{- include "aad-pod-identity.labels" . | nindent 6 }}
      app.kubernetes.io/component: mic
  template:
    metadata:
      labels:
        {{- include "aad-pod-identity.labels" . | nindent 8 }}
        app.kubernetes.io/component: mic
    spec:
      {{- if .Values.rbac.enabled }}
      serviceAccountName: {{ template "aad-pod-identity.mic.fullname" . }}
      {{- end }}
      containers:
      - name: mic
        image: "{{ .Values.image.repository }}/{{ .Values.mic.image }}:{{ .Values.mic.tag }}"
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        args:
          {{- if not .Values.adminsecret }}
          - "--cloudconfig=/etc/kubernetes/azure.json"
          {{- end }}
          - "--logtostderr"
          {{- if .Values.mic.logVerbosity }}
          - -v={{ .Values.mic.logVerbosity }}
          {{- end }}
          {{- if .Values.mic.leaderElection.instance }}
          - --leader-election-instance={{ .Values.mic.leaderElection.instance }}
          {{- end }}
          {{- if .Values.mic.leaderElection.namespace }}
          - --leader-election-namespace={{ .Values.mic.leaderElection.namespace }}
          {{- end }}
          {{- if .Values.mic.leaderElection.name }}
          - --leader-election-name={{ .Values.mic.leaderElection.name }}
          {{- end }}
          {{- if .Values.mic.leaderElection.duration }}
          - --leader-election-duration={{ .Values.mic.leaderElection.duration }}
          {{- end }}
          {{- if .Values.mic.probePort }}
          - --http-probe-port={{ .Values.mic.probePort }}
          {{- end }}
          {{- if .Values.mic.createDeleteBatch }}
          - --createDeleteBatch={{ .Values.mic.createDeleteBatch }}
          {{- end }}
          {{- if .Values.mic.clientQps }}
          - --clientQps={{ .Values.mic.clientQps }}
          {{- end }}          
          {{- if .Values.mic.immutableUserMSIs }}
          - "--immutable-user-msis={{- join "," .Values.mic.immutableUserMSIs}}"
          {{- end }}
          {{- if .Values.mic.prometheusPort }}
          - --prometheus-port={{ .Values.mic.prometheusPort }}
          {{- end }}  
        env:
          - name: FORCENAMESPACED
            value: "{{ .Values.forceNameSpaced }}"
          {{- if .Values.adminsecret }}
          - name: CLOUD
            valueFrom:
              secretKeyRef:
                key: Cloud
                name: {{ template "aad-pod-identity.mic.fullname" . }}
          - name: SUBSCRIPTION_ID
            valueFrom:
              secretKeyRef:
                key: SubscriptionID
                name: {{ template "aad-pod-identity.mic.fullname" . }}
          - name: RESOURCE_GROUP
            valueFrom:
              secretKeyRef:
                key: ResourceGroup
                name: {{ template "aad-pod-identity.mic.fullname" . }}
          - name: VM_TYPE
            valueFrom:
              secretKeyRef:
                key: VMType
                name: {{ template "aad-pod-identity.mic.fullname" . }}
          - name: TENANT_ID
            valueFrom:
              secretKeyRef:
                key: TenantID
                name: {{ template "aad-pod-identity.mic.fullname" . }}
          - name: CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: ClientID
                name: {{ template "aad-pod-identity.mic.fullname" . }}
          - name: CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: ClientSecret
                name: {{ template "aad-pod-identity.mic.fullname" . }}
          {{- end }}
        volumeMounts:
          - name: certificates
            mountPath: /etc/kubernetes/certs
            readOnly: true
          {{- if not .Values.adminsecret }}
          - name: k8s-azure-file
            mountPath: /etc/kubernetes/azure.json
            readOnly: true
          {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            {{- if .Values.mic.probePort }}
            port: {{ .Values.mic.probePort }}
            {{- else }}
            port: 8080
            {{- end }}
          initialDelaySeconds: 10
          periodSeconds: 5
{{- with .Values.mic.resources }}
        resources:
{{ toYaml . | indent 12 }}
{{- end }}
      volumes:
      - name: certificates
        hostPath:
          path: /etc/kubernetes/certs
      {{- if not .Values.adminsecret }}
      - name: k8s-azure-file
        hostPath:
          path: /etc/kubernetes/azure.json
      {{- end }}
{{- with .Values.mic.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.mic.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.mic.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
